{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_crewmateTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addAllowedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crewmateToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getSingleTokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTokenValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserTotalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "issueTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "setPriceFeedContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "tokenIsAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenPriceFeedMapping",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "uniqueTokenStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "unstakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/IdeaPad/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
    "1": "C:/Users/IdeaPad/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "2": "C:/Users/IdeaPad/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "3": "C:/Users/IdeaPad/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "4": "contracts/TokenFarm.sol"
  },
  "ast": {
    "absolutePath": "contracts/TokenFarm.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        664
      ],
      "Context": [
        685
      ],
      "IERC20": [
        618
      ],
      "Ownable": [
        540
      ],
      "TokenFarm": [
        436
      ]
    },
    "id": 437,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:4"
      },
      {
        "absolutePath": "C:/Users/IdeaPad/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 541,
        "src": "58:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/IdeaPad/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 619,
        "src": "111:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/IdeaPad/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.1/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 437,
        "sourceUnit": 665,
        "src": "168:76:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 540,
              "src": "461:7:4"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "461:7:4"
          }
        ],
        "canonicalName": "TokenFarm",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5,
          "nodeType": "StructuredDocumentation",
          "src": "246:192:4",
          "text": " @title Token Farm Contract\n @author DJ Evan\n @notice Controls logic for the defi\n @dev available functions: stakeTokens, unStakeTokens, issueTokens, addAllowedTokens, getValue"
        },
        "fullyImplemented": true,
        "id": 436,
        "linearizedBaseContracts": [
          436,
          540,
          685
        ],
        "name": "TokenFarm",
        "nameLocation": "448:9:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "29161a00",
            "id": 13,
            "mutability": "mutable",
            "name": "stakingBalance",
            "nameLocation": "530:14:4",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "475:69:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 12,
              "keyType": {
                "id": 8,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "483:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "475:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 11,
                "keyType": {
                  "id": 9,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "502:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "494:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 10,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "513:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "55b08abc",
            "id": 17,
            "mutability": "mutable",
            "name": "uniqueTokenStaked",
            "nameLocation": "585:17:4",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "550:52:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "558:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "550:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 15,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "569:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27927b3e",
            "id": 21,
            "mutability": "mutable",
            "name": "tokenPriceFeedMapping",
            "nameLocation": "643:21:4",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "608:56:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "616:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "608:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 19,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "627:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd5e6dd1",
            "id": 24,
            "mutability": "mutable",
            "name": "stakers",
            "nameLocation": "688:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "671:24:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "671:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 23,
              "nodeType": "ArrayTypeName",
              "src": "671:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5e5f2e26",
            "id": 27,
            "mutability": "mutable",
            "name": "allowedTokens",
            "nameLocation": "718:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "701:30:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 25,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "701:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 26,
              "nodeType": "ArrayTypeName",
              "src": "701:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0cd4720e",
            "id": 30,
            "mutability": "mutable",
            "name": "crewmateToken",
            "nameLocation": "752:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 436,
            "src": "738:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$618",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 29,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 618,
                "src": "738:6:4"
              },
              "referencedDeclaration": 618,
              "src": "738:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$618",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "815:62:4",
              "statements": [
                {
                  "expression": {
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35,
                      "name": "crewmateToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "825:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$618",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 37,
                          "name": "_crewmateTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "848:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 36,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 618,
                        "src": "841:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$618_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "841:29:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$618",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "825:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$618",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "825:45:4"
                }
              ]
            },
            "id": 42,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_crewmateTokenAddress",
                  "nameLocation": "792:21:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "784:29:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "783:31:4"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "815:0:4"
            },
            "scope": 436,
            "src": "772:105:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "1096:59:4",
              "statements": [
                {
                  "expression": {
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 52,
                        "name": "tokenPriceFeedMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1106:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 54,
                      "indexExpression": {
                        "id": 53,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1128:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1106:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 55,
                      "name": "_priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "1138:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1106:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "1106:42:4"
                }
              ]
            },
            "documentation": {
              "id": 43,
              "nodeType": "StructuredDocumentation",
              "src": "883:105:4",
              "text": " @notice set price feed for this contract\n @dev only owner may call this function"
            },
            "functionSelector": "877dd39d",
            "id": 59,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 50,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 49,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 483,
                  "src": "1082:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1082:9:4"
              }
            ],
            "name": "setPriceFeedContract",
            "nameLocation": "1002:20:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1031:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "1023:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "_priceFeed",
                  "nameLocation": "1047:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "1039:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1039:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1022:36:4"
            },
            "returnParameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1096:0:4"
            },
            "scope": 436,
            "src": "993:162:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "1317:246:4",
              "statements": [
                {
                  "body": {
                    "id": 95,
                    "nodeType": "Block",
                    "src": "1372:185:4",
                    "statements": [
                      {
                        "assignments": [
                          77
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 77,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nameLocation": "1394:9:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 95,
                            "src": "1386:17:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 76,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1386:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 81,
                        "initialValue": {
                          "baseExpression": {
                            "id": 78,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "1406:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 80,
                          "indexExpression": {
                            "id": 79,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "1414:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1406:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1386:30:4"
                      },
                      {
                        "assignments": [
                          83
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 83,
                            "mutability": "mutable",
                            "name": "userTotalValue",
                            "nameLocation": "1438:14:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 95,
                            "src": "1430:22:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 82,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1430:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 87,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 85,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77,
                              "src": "1473:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 84,
                            "name": "getUserTotalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1455:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1455:28:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1430:53:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 91,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77,
                              "src": "1520:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 92,
                              "name": "userTotalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "1531:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 88,
                              "name": "crewmateToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "1497:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$618",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 567,
                            "src": "1497:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1497:49:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 94,
                        "nodeType": "ExpressionStatement",
                        "src": "1497:49:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 69,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "1347:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 70,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1351:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1351:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1347:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 96,
                  "initializationExpression": {
                    "assignments": [
                      66
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 66,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1340:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 96,
                        "src": "1332:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 65,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1332:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 68,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1344:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1332:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1367:3:4",
                      "subExpression": {
                        "id": 73,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "1367:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 75,
                    "nodeType": "ExpressionStatement",
                    "src": "1367:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "1327:230:4"
                }
              ]
            },
            "documentation": {
              "id": 60,
              "nodeType": "StructuredDocumentation",
              "src": "1161:111:4",
              "text": " @notice send stakers token reward based on TVL\n @dev only owner may call this function"
            },
            "functionSelector": "60ab5852",
            "id": 98,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 63,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 62,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 483,
                  "src": "1307:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1307:9:4"
              }
            ],
            "name": "issueTokens",
            "nameLocation": "1286:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1297:2:4"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:0:4"
            },
            "scope": 436,
            "src": "1277:286:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "1776:321:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 107,
                            "name": "uniqueTokenStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1794:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 109,
                          "indexExpression": {
                            "id": 108,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "1812:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1794:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1821:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1794:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20746f6b656e207374616b6564",
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1824:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9df6593cc50bf7cb4f53d1ecfc4874a35952e646004447f8e3d79c6c63e01a1",
                          "typeString": "literal_string \"No token staked\""
                        },
                        "value": "No token staked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9df6593cc50bf7cb4f53d1ecfc4874a35952e646004447f8e3d79c6c63e01a1",
                          "typeString": "literal_string \"No token staked\""
                        }
                      ],
                      "id": 106,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1786:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1786:56:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1786:56:4"
                },
                {
                  "assignments": [
                    116
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116,
                      "mutability": "mutable",
                      "name": "totalValue",
                      "nameLocation": "1861:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 145,
                      "src": "1853:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 115,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1853:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 118,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1874:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1853:22:4"
                },
                {
                  "body": {
                    "id": 141,
                    "nodeType": "Block",
                    "src": "1936:127:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 130,
                            "name": "totalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "1950:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 131,
                              "name": "totalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116,
                              "src": "1979:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 133,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 101,
                                  "src": "2028:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 134,
                                    "name": "allowedTokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27,
                                    "src": "2035:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 136,
                                  "indexExpression": {
                                    "id": 135,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 120,
                                    "src": "2049:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2035:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 132,
                                "name": "getSingleTokenValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 188,
                                "src": "2008:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view returns (uint256)"
                                }
                              },
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2008:44:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1979:73:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1950:102:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 140,
                        "nodeType": "ExpressionStatement",
                        "src": "1950:102:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 123,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "1905:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 124,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "1909:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1909:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1905:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 142,
                  "initializationExpression": {
                    "assignments": [
                      120
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 120,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1898:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 142,
                        "src": "1890:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1890:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 122,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1902:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1890:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1931:3:4",
                      "subExpression": {
                        "id": 127,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1931:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 129,
                    "nodeType": "ExpressionStatement",
                    "src": "1931:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "1885:178:4"
                },
                {
                  "expression": {
                    "id": 143,
                    "name": "totalValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 116,
                    "src": "2080:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 105,
                  "id": 144,
                  "nodeType": "Return",
                  "src": "2073:17:4"
                }
              ]
            },
            "documentation": {
              "id": 99,
              "nodeType": "StructuredDocumentation",
              "src": "1569:130:4",
              "text": " @notice get all user's value locked\n @param _user selected user address\n @return uint256 user's TVL"
            },
            "functionSelector": "af3f5e22",
            "id": 146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTotalValue",
            "nameLocation": "1713:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "1739:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "1731:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1730:15:4"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "1767:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1767:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1766:9:4"
            },
            "scope": 436,
            "src": "1704:393:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "2501:204:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 156,
                        "name": "uniqueTokenStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "2515:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 158,
                      "indexExpression": {
                        "id": 157,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "2533:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2515:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2543:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2515:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 163,
                  "nodeType": "IfStatement",
                  "src": "2511:43:4",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2553:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 155,
                    "id": 162,
                    "nodeType": "Return",
                    "src": "2546:8:4"
                  }
                },
                {
                  "assignments": [
                    165,
                    167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 165,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "2574:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 187,
                      "src": "2566:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 164,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2566:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 167,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "2589:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 187,
                      "src": "2581:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 166,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2581:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 171,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 169,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "2615:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 168,
                      "name": "getTokenValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "2601:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2601:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2565:57:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 172,
                                    "name": "stakingBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13,
                                    "src": "2642:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 174,
                                  "indexExpression": {
                                    "id": 173,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 151,
                                    "src": "2657:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2642:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 176,
                                "indexExpression": {
                                  "id": 175,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 149,
                                  "src": "2665:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2642:29:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 177,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 165,
                                "src": "2674:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2642:37:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 179,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2641:39:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2684:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "id": 181,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 167,
                                "src": "2688:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2684:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 183,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2683:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2641:56:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 185,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2640:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 155,
                  "id": 186,
                  "nodeType": "Return",
                  "src": "2633:65:4"
                }
              ]
            },
            "documentation": {
              "id": 147,
              "nodeType": "StructuredDocumentation",
              "src": "2103:275:4",
              "text": " @notice get value of each user's token\n @dev converts token value to USD\n @dev token's price * user's staking balance\n @param _user selected user address\n @param _token token address\n @return uint256 the converted token amount"
            },
            "functionSelector": "3ec4113b",
            "id": 188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSingleTokenValue",
            "nameLocation": "2392:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "2420:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "2412:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2412:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2435:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "2427:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2427:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2411:31:4"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "2488:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2488:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2487:9:4"
            },
            "scope": 436,
            "src": "2383:322:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 233,
              "nodeType": "Block",
              "src": "2988:342:4",
              "statements": [
                {
                  "assignments": [
                    199
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 199,
                      "mutability": "mutable",
                      "name": "priceFeedAddress",
                      "nameLocation": "3006:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 233,
                      "src": "2998:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 198,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2998:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 203,
                  "initialValue": {
                    "baseExpression": {
                      "id": 200,
                      "name": "tokenPriceFeedMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "3025:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 202,
                    "indexExpression": {
                      "id": 201,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "3047:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3025:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2998:56:4"
                },
                {
                  "assignments": [
                    206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 206,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "3086:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 233,
                      "src": "3064:31:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$664",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 205,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 204,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 664,
                          "src": "3064:21:4"
                        },
                        "referencedDeclaration": 664,
                        "src": "3064:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$664",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 210,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 208,
                        "name": "priceFeedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "3133:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 207,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 664,
                      "src": "3098:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$664_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3098:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$664",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3064:95:4"
                },
                {
                  "assignments": [
                    null,
                    212,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 212,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "3179:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 233,
                      "src": "3172:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 211,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3172:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 216,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 213,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "3194:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$664",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 663,
                      "src": "3194:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3194:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3169:52:4"
                },
                {
                  "assignments": [
                    218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 218,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "3239:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 233,
                      "src": "3231:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 217,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3231:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 225,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 221,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "3258:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$664",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 625,
                          "src": "3258:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3258:20:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3250:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 219,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3250:7:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3250:29:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3231:48:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 228,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 212,
                            "src": "3306:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3298:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 226,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3298:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3298:14:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 230,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 218,
                        "src": "3314:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 231,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3297:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 197,
                  "id": 232,
                  "nodeType": "Return",
                  "src": "3290:33:4"
                }
              ]
            },
            "documentation": {
              "id": 189,
              "nodeType": "StructuredDocumentation",
              "src": "2711:166:4",
              "text": " @notice get token price\n @dev gather price feed from chainlink\n @param _token token address\n @return uint256 price feed, decimals"
            },
            "functionSelector": "f1c5d6c2",
            "id": 234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenValue",
            "nameLocation": "2891:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2913:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2905:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2905:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2904:16:4"
            },
            "returnParameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2966:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2966:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2975:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2975:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2965:18:4"
            },
            "scope": 436,
            "src": "2882:448:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 306,
              "nodeType": "Block",
              "src": "3584:524:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 243,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 237,
                          "src": "3602:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3612:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3602:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d757374206265206d6f7265207468616e2030",
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3615:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c8935a62694df0f55eb616b304d0939d629638a210986a1a26cdc7bcc6a439a",
                          "typeString": "literal_string \"Amount must be more than 0\""
                        },
                        "value": "Amount must be more than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c8935a62694df0f55eb616b304d0939d629638a210986a1a26cdc7bcc6a439a",
                          "typeString": "literal_string \"Amount must be more than 0\""
                        }
                      ],
                      "id": 242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3594:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3594:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "3594:50:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 251,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "3690:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 250,
                          "name": "tokenIsAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "3675:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3675:22:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f6b656e2063757272656e746c79206d61796e6f74206265207374616b6564",
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3711:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae31dab1f82d6ab048ce7336130ad0c9e87a5f5256e017f52d498b2f5319deb8",
                          "typeString": "literal_string \"This token currently maynot be staked\""
                        },
                        "value": "This token currently maynot be staked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae31dab1f82d6ab048ce7336130ad0c9e87a5f5256e017f52d498b2f5319deb8",
                          "typeString": "literal_string \"This token currently maynot be staked\""
                        }
                      ],
                      "id": 249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3654:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3654:106:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "3654:106:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 260,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3798:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3798:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 264,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3818:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenFarm_$436",
                              "typeString": "contract TokenFarm"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenFarm_$436",
                              "typeString": "contract TokenFarm"
                            }
                          ],
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3810:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 262,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3810:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3810:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 266,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "3825:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 257,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "3777:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 256,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 618,
                          "src": "3770:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$618_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3770:14:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$618",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 599,
                      "src": "3770:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3770:63:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "3770:63:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 270,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3868:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3868:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 272,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "3880:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 269,
                      "name": "updateUniqueTokenStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 388,
                      "src": "3844:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3844:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "3844:43:4"
                },
                {
                  "expression": {
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 275,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "3897:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 279,
                        "indexExpression": {
                          "id": 276,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 239,
                          "src": "3912:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3897:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 280,
                      "indexExpression": {
                        "expression": {
                          "id": 277,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3920:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3920:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3897:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 281,
                            "name": "stakingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "3946:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 283,
                          "indexExpression": {
                            "id": 282,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "3961:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3946:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 286,
                        "indexExpression": {
                          "expression": {
                            "id": 284,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3969:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3969:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3946:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 287,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "3995:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3946:56:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3897:105:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "3897:105:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 291,
                        "name": "uniqueTokenStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "4017:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 294,
                      "indexExpression": {
                        "expression": {
                          "id": 292,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4035:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4035:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4017:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4050:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4017:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 305,
                  "nodeType": "IfStatement",
                  "src": "4013:89:4",
                  "trueBody": {
                    "id": 304,
                    "nodeType": "Block",
                    "src": "4053:49:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 300,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4080:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4080:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 297,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "4067:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "4067:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4067:24:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 303,
                        "nodeType": "ExpressionStatement",
                        "src": "4067:24:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 235,
              "nodeType": "StructuredDocumentation",
              "src": "3336:182:4",
              "text": " @notice stake token to the contract\n @dev only for certain tokens\n @param _amount how much token wanted to be staked\n @param _token token address"
            },
            "functionSelector": "0bea440d",
            "id": 307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTokens",
            "nameLocation": "3532:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3552:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "3544:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3544:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 239,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3569:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "3561:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3561:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3543:33:4"
            },
            "returnParameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3584:0:4"
            },
            "scope": 436,
            "src": "3523:585:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 359,
              "nodeType": "Block",
              "src": "4272:312:4",
              "statements": [
                {
                  "assignments": [
                    314
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 314,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "4290:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 359,
                      "src": "4282:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 313,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4282:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 321,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 315,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "4300:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 317,
                      "indexExpression": {
                        "id": 316,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 310,
                        "src": "4315:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4300:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 320,
                    "indexExpression": {
                      "expression": {
                        "id": 318,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4323:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4323:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4300:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4282:52:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 323,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 314,
                          "src": "4353:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4363:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4353:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e672062616c616e63652063616e6e6f74206265207a65726f",
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4366:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8699e9b9a5eb18b10d4082e77c6815b39991fa8001377af8f4b2787c03201898",
                          "typeString": "literal_string \"Staking balance cannot be zero\""
                        },
                        "value": "Staking balance cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8699e9b9a5eb18b10d4082e77c6815b39991fa8001377af8f4b2787c03201898",
                          "typeString": "literal_string \"Staking balance cannot be zero\""
                        }
                      ],
                      "id": 322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4345:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4345:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "4345:54:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 333,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4434:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4434:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 335,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "4446:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 330,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 310,
                            "src": "4417:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 329,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 618,
                          "src": "4410:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$618_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4410:14:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$618",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 567,
                      "src": "4410:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4410:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "4410:44:4"
                },
                {
                  "expression": {
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 338,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "4464:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 342,
                        "indexExpression": {
                          "id": 339,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "4479:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4464:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 343,
                      "indexExpression": {
                        "expression": {
                          "id": 340,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4487:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4487:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4464:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4501:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4464:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "4464:38:4"
                },
                {
                  "expression": {
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 347,
                        "name": "uniqueTokenStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "4512:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 350,
                      "indexExpression": {
                        "expression": {
                          "id": 348,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4530:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4530:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4512:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 351,
                          "name": "uniqueTokenStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "4544:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 354,
                        "indexExpression": {
                          "expression": {
                            "id": 352,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4562:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4562:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4544:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4576:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4544:33:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4512:65:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 358,
                  "nodeType": "ExpressionStatement",
                  "src": "4512:65:4"
                }
              ]
            },
            "documentation": {
              "id": 308,
              "nodeType": "StructuredDocumentation",
              "src": "4114:107:4",
              "text": " @notice transfer the staked balance back to the owner\n @param _token token address"
            },
            "functionSelector": "2d1ad8b8",
            "id": 360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstakeTokens",
            "nameLocation": "4235:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 310,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4257:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 360,
                  "src": "4249:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4249:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4248:16:4"
            },
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4272:0:4"
            },
            "scope": 436,
            "src": "4226:358:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 387,
              "nodeType": "Block",
              "src": "4802:136:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 368,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "4816:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 370,
                        "indexExpression": {
                          "id": 369,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "4831:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4816:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 372,
                      "indexExpression": {
                        "id": 371,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 363,
                        "src": "4839:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4816:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4849:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4816:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 386,
                  "nodeType": "IfStatement",
                  "src": "4812:120:4",
                  "trueBody": {
                    "id": 385,
                    "nodeType": "Block",
                    "src": "4852:80:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 375,
                              "name": "uniqueTokenStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "4866:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 377,
                            "indexExpression": {
                              "id": 376,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "4884:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4866:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 378,
                                "name": "uniqueTokenStaked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17,
                                "src": "4893:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 380,
                              "indexExpression": {
                                "id": 379,
                                "name": "_user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "4911:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4893:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4920:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4893:28:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4866:55:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 384,
                        "nodeType": "ExpressionStatement",
                        "src": "4866:55:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 361,
              "nodeType": "StructuredDocumentation",
              "src": "4590:134:4",
              "text": " @notice tracks each user staked tokens\n @param _user selected user address\n @param _token token address"
            },
            "id": 388,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateUniqueTokenStaked",
            "nameLocation": "4738:23:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 363,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "4770:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 388,
                  "src": "4762:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4762:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 365,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4785:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 388,
                  "src": "4777:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4777:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4761:31:4"
            },
            "returnParameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4802:0:4"
            },
            "scope": 436,
            "src": "4729:209:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "5140:43:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 399,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "5169:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 396,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "5150:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5150:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5150:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "5150:26:4"
                }
              ]
            },
            "documentation": {
              "id": 389,
              "nodeType": "StructuredDocumentation",
              "src": "4944:132:4",
              "text": " @notice allow token to be staked\n @param _token token address\n @dev only owner may call this function"
            },
            "functionSelector": "171e44ea",
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 394,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 393,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 483,
                  "src": "5130:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5130:9:4"
              }
            ],
            "name": "addAllowedTokens",
            "nameLocation": "5090:16:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 391,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5115:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 403,
                  "src": "5107:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5107:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5106:16:4"
            },
            "returnParameters": {
              "id": 395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5140:0:4"
            },
            "scope": 436,
            "src": "5081:102:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 434,
              "nodeType": "Block",
              "src": "5377:158:4",
              "statements": [
                {
                  "body": {
                    "id": 430,
                    "nodeType": "Block",
                    "src": "5438:68:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 422,
                              "name": "allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "5456:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 424,
                            "indexExpression": {
                              "id": 423,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 412,
                              "src": "5470:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5456:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 425,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 406,
                            "src": "5476:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5456:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 429,
                        "nodeType": "IfStatement",
                        "src": "5452:43:4",
                        "trueBody": {
                          "expression": {
                            "hexValue": "74727565",
                            "id": 427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5491:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "functionReturnParameters": 410,
                          "id": 428,
                          "nodeType": "Return",
                          "src": "5484:11:4"
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 415,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 412,
                      "src": "5407:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 416,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "5411:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5411:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5407:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 431,
                  "initializationExpression": {
                    "assignments": [
                      412
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5400:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 431,
                        "src": "5392:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5392:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 414,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5404:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5392:13:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5433:3:4",
                      "subExpression": {
                        "id": 419,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 412,
                        "src": "5433:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 421,
                    "nodeType": "ExpressionStatement",
                    "src": "5433:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "5387:119:4"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5523:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 410,
                  "id": 433,
                  "nodeType": "Return",
                  "src": "5516:12:4"
                }
              ]
            },
            "documentation": {
              "id": 404,
              "nodeType": "StructuredDocumentation",
              "src": "5189:116:4",
              "text": " @notice check is token allowed to stake\n @param _token token address\n @return boolean"
            },
            "functionSelector": "dd5b8467",
            "id": 435,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenIsAllowed",
            "nameLocation": "5319:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5342:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "5334:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5334:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5333:16:4"
            },
            "returnParameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 409,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 435,
                  "src": "5371:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5371:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5370:6:4"
            },
            "scope": 436,
            "src": "5310:225:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 437,
        "src": "439:5098:4",
        "usedErrors": []
      }
    ],
    "src": "33:5505:4"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161109638038061109683398101604081905261002f916100ad565b6100383361005d565b600680546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610faa806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806360ab5852116100a2578063af3f5e2211610071578063af3f5e2214610262578063dd5b846714610275578063f1c5d6c214610298578063f2fde38b146102c0578063fd5e6dd1146102d357600080fd5b806360ab58521461022e578063715018a614610236578063877dd39d1461023e5780638da5cb5b1461025157600080fd5b806329161a00116100e957806329161a001461019c5780632d1ad8b8146101d55780633ec4113b146101e857806355b08abc146101fb5780635e5f2e261461021b57600080fd5b80630bea440d1461011b5780630cd4720e14610130578063171e44ea1461016057806327927b3e14610173575b600080fd5b61012e610129366004610c58565b6102e6565b005b600654610143906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61012e61016e366004610c84565b6104cb565b610143610181366004610c84565b6003602052600090815260409020546001600160a01b031681565b6101c76101aa366004610ca6565b600160209081526000928352604080842090915290825290205481565b604051908152602001610157565b61012e6101e3366004610c84565b610547565b6101c76101f6366004610ca6565b610677565b6101c7610209366004610c84565b60026020526000908152604090205481565b610143610229366004610cd0565b6106fe565b61012e610728565b61012e610825565b61012e61024c366004610ca6565b61085b565b6000546001600160a01b0316610143565b6101c7610270366004610c84565b6108b3565b610288610283366004610c84565b61096e565b6040519015158152602001610157565b6102ab6102a6366004610c84565b6109d8565b60408051928352602083019190915201610157565b61012e6102ce366004610c84565b610ad9565b6101436102e1366004610cd0565b610b71565b6000821161033b5760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e74206d757374206265206d6f7265207468616e203000000000000060448201526064015b60405180910390fd5b6103448161096e565b61039e5760405162461bcd60e51b815260206004820152602560248201527f5468697320746f6b656e2063757272656e746c79206d61796e6f7420626520736044820152641d185ad95960da1b6064820152608401610332565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af11580156103f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104159190610ce9565b506104203382610b81565b6001600160a01b038116600090815260016020908152604080832033845290915290205461044f908390610d21565b6001600160a01b0382166000908152600160208181526040808420338552825280842094909455600290529190205414156104c757600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b031916331790555b5050565b6000546001600160a01b031633146104f55760405162461bcd60e51b815260040161033290610d39565b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600160209081526040808320338452909152902054806105b85760405162461bcd60e51b815260206004820152601e60248201527f5374616b696e672062616c616e63652063616e6e6f74206265207a65726f00006044820152606401610332565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015610605573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106299190610ce9565b506001600160a01b038216600090815260016020818152604080842033855282528084208490556002909152909120546106639190610d6e565b336000908152600260205260409020555050565b6001600160a01b03821660009081526002602052604081205461069c575060006106f8565b6000806106a8846109d8565b90925090506106b881600a610e69565b6001600160a01b038086166000908152600160209081526040808320938a16835292905220546106e9908490610e75565b6106f39190610e94565b925050505b92915050565b6005818154811061070e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146107525760405162461bcd60e51b815260040161033290610d39565b60005b6004548110156108225760006004828154811061077457610774610eb6565b60009182526020822001546001600160a01b03169150610793826108b3565b60065460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af11580156107e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080c9190610ce9565b505050808061081a90610ecc565b915050610755565b50565b6000546001600160a01b0316331461084f5760405162461bcd60e51b815260040161033290610d39565b6108596000610bec565b565b6000546001600160a01b031633146108855760405162461bcd60e51b815260040161033290610d39565b6001600160a01b03918216600090815260036020526040902080546001600160a01b03191691909216179055565b6001600160a01b03811660009081526002602052604081205461090a5760405162461bcd60e51b815260206004820152600f60248201526e139bc81d1bdad95b881cdd185ad959608a1b6044820152606401610332565b6000805b60055481101561096757610949846005838154811061092f5761092f610eb6565b6000918252602090912001546001600160a01b0316610677565b6109539083610d21565b91508061095f81610ecc565b91505061090e565b5092915050565b6000805b6005548110156109cf57826001600160a01b03166005828154811061099957610999610eb6565b6000918252602090912001546001600160a01b031614156109bd5750600192915050565b806109c781610ecc565b915050610972565b50600092915050565b6001600160a01b03808216600090815260036020526040808220548151633fabe5a360e21b815291519293849391169182918491839163feaf968c9160048082019260a0929091908290030181865afa158015610a39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5d9190610f01565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aa3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac79190610f51565b919760ff909216965090945050505050565b6000546001600160a01b03163314610b035760405162461bcd60e51b815260040161033290610d39565b6001600160a01b038116610b685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610332565b61082281610bec565b6004818154811061070e57600080fd5b6001600160a01b038082166000908152600160209081526040808320938616835292905220546104c7576001600160a01b038216600090815260026020526040902054610bcf906001610d21565b6001600160a01b0383166000908152600260205260409020555050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610c5357600080fd5b919050565b60008060408385031215610c6b57600080fd5b82359150610c7b60208401610c3c565b90509250929050565b600060208284031215610c9657600080fd5b610c9f82610c3c565b9392505050565b60008060408385031215610cb957600080fd5b610cc283610c3c565b9150610c7b60208401610c3c565b600060208284031215610ce257600080fd5b5035919050565b600060208284031215610cfb57600080fd5b81518015158114610c9f57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610d3457610d34610d0b565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015610d8057610d80610d0b565b500390565b600181815b80851115610dc0578160001904821115610da657610da6610d0b565b80851615610db357918102915b93841c9390800290610d8a565b509250929050565b600082610dd7575060016106f8565b81610de4575060006106f8565b8160018114610dfa5760028114610e0457610e20565b60019150506106f8565b60ff841115610e1557610e15610d0b565b50506001821b6106f8565b5060208310610133831016604e8410600b8410161715610e43575081810a6106f8565b610e4d8383610d85565b8060001904821115610e6157610e61610d0b565b029392505050565b6000610c9f8383610dc8565b6000816000190483118215151615610e8f57610e8f610d0b565b500290565b600082610eb157634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610ee057610ee0610d0b565b5060010190565b805169ffffffffffffffffffff81168114610c5357600080fd5b600080600080600060a08688031215610f1957600080fd5b610f2286610ee7565b9450602086015193506040860151925060608601519150610f4560808701610ee7565b90509295509295909350565b600060208284031215610f6357600080fd5b815160ff81168114610c9f57600080fdfea26469706673582212207753c7989235a677fbb86dcd4eac6b3d06ae0615d63fa72677e5982225cd999b64736f6c634300080c0033",
  "bytecodeSha1": "abe59d6d3ac65257211fc9ceede5af5d9507eaf1",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "TokenFarm",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "37": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "TokenFarm.stakeTokens": {
          "32": [
            3602,
            3613,
            true
          ],
          "33": [
            3675,
            3697,
            true
          ],
          "34": [
            4017,
            4051,
            false
          ]
        },
        "TokenFarm.tokenIsAllowed": {
          "36": [
            5456,
            5482,
            false
          ]
        },
        "TokenFarm.unstakeTokens": {
          "35": [
            4353,
            4364,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "30": [
            2131,
            2148
          ],
          "31": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "17": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "27": [
            1926,
            1999
          ],
          "28": [
            2009,
            2028
          ]
        }
      },
      "1": {},
      "2": {
        "Context._msgSender": {
          "7": [
            658,
            675
          ]
        }
      },
      "3": {},
      "4": {
        "TokenFarm.addAllowedTokens": {
          "8": [
            5150,
            5176
          ]
        },
        "TokenFarm.getSingleTokenValue": {
          "13": [
            2546,
            2554
          ],
          "14": [
            2633,
            2698
          ]
        },
        "TokenFarm.getTokenValue": {
          "26": [
            3290,
            3323
          ]
        },
        "TokenFarm.getUserTotalValue": {
          "19": [
            1786,
            1842
          ],
          "20": [
            1950,
            2052
          ],
          "21": [
            1931,
            1934
          ],
          "22": [
            2073,
            2090
          ]
        },
        "TokenFarm.issueTokens": {
          "15": [
            1497,
            1546
          ],
          "16": [
            1367,
            1370
          ]
        },
        "TokenFarm.setPriceFeedContract": {
          "18": [
            1106,
            1148
          ]
        },
        "TokenFarm.stakeTokens": {
          "1": [
            3594,
            3644
          ],
          "2": [
            3654,
            3760
          ],
          "3": [
            3770,
            3833
          ],
          "4": [
            3844,
            3887
          ],
          "5": [
            3897,
            4002
          ],
          "6": [
            4067,
            4091
          ]
        },
        "TokenFarm.tokenIsAllowed": {
          "23": [
            5484,
            5495
          ],
          "24": [
            5433,
            5436
          ],
          "25": [
            5516,
            5528
          ]
        },
        "TokenFarm.unstakeTokens": {
          "9": [
            4345,
            4399
          ],
          "10": [
            4410,
            4454
          ],
          "11": [
            4464,
            4502
          ],
          "12": [
            4512,
            4577
          ]
        },
        "TokenFarm.updateUniqueTokenStaked": {
          "29": [
            4866,
            4921
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.1/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Ownable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "439:5098:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3523:585;;;;;;:::i;:::-;;:::i;:::-;;738:27;;;;;-1:-1:-1;;;;;738:27:4;;;;;;-1:-1:-1;;;;;629:32:5;;;611:51;;599:2;584:18;738:27:4;;;;;;;;5081:102;;;;;;:::i;:::-;;:::i;608:56::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;608:56:4;;;475:69;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1483:25:5;;;1471:2;1456:18;475:69:4;1337:177:5;4226:358:4;;;;;;:::i;:::-;;:::i;2383:322::-;;;;;;:::i;:::-;;:::i;550:52::-;;;;;;:::i;:::-;;;;;;;;;;;;;;701:30;;;;;;:::i;:::-;;:::i;1277:286::-;;;:::i;1605:92:0:-;;;:::i;993:162:4:-;;;;;;:::i;:::-;;:::i;973:85:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;1704:393:4;;;;;;:::i;:::-;;:::i;5310:225::-;;;;;;:::i;:::-;;:::i;:::-;;;1869:14:5;;1862:22;1844:41;;1832:2;1817:18;5310:225:4;1704:187:5;2882:448:4;;;;;;:::i;:::-;;:::i;:::-;;;;2070:25:5;;;2126:2;2111:18;;2104:34;;;;2043:18;2882:448:4;1896:248:5;1846:189:0;;;;;;:::i;:::-;;:::i;671:24:4:-;;;;;;:::i;:::-;;:::i;3523:585::-;3612:1;3602:7;:11;3594:50;;;;-1:-1:-1;;;3594:50:4;;2351:2:5;3594:50:4;;;2333:21:5;2390:2;2370:18;;;2363:30;2429:28;2409:18;;;2402:56;2475:18;;3594:50:4;;;;;;;;;3675:22;3690:6;3675:14;:22::i;:::-;3654:106;;;;-1:-1:-1;;;3654:106:4;;2706:2:5;3654:106:4;;;2688:21:5;2745:2;2725:18;;;2718:30;2784:34;2764:18;;;2757:62;-1:-1:-1;;;2835:18:5;;;2828:35;2880:19;;3654:106:4;2504:401:5;3654:106:4;3770:63;;-1:-1:-1;;;3770:63:4;;3798:10;3770:63;;;3150:34:5;3818:4:4;3200:18:5;;;3193:43;3252:18;;;3245:34;;;-1:-1:-1;;;;;3770:27:4;;;;;3085:18:5;;3770:63:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3844:43;3868:10;3880:6;3844:23;:43::i;:::-;-1:-1:-1;;;;;3946:22:4;;;;;;:14;:22;;;;;;;;3969:10;3946:34;;;;;;;;:56;;3995:7;;3946:56;:::i;:::-;-1:-1:-1;;;;;3897:22:4;;;;;;:14;:22;;;;;;;;3920:10;3897:34;;;;;;;:105;;;;4017:17;:29;;;;;;:34;4013:89;;;4067:7;:24;;;;;;;-1:-1:-1;4067:24:4;;;;;;;;-1:-1:-1;;;;;;4067:24:4;4080:10;4067:24;;;4013:89;3523:585;;:::o;5081:102::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;5150:13:4::1;:26:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;5150:26:4;;;;;::::1;::::0;;-1:-1:-1;;;;;;5150:26:4::1;-1:-1:-1::0;;;;;5150:26:4;;;::::1;::::0;;;::::1;::::0;;5081:102::o;4226:358::-;-1:-1:-1;;;;;4300:22:4;;4282:15;4300:22;;;:14;:22;;;;;;;;4323:10;4300:34;;;;;;;;4353:11;4345:54;;;;-1:-1:-1;;;4345:54:4;;4400:2:5;4345:54:4;;;4382:21:5;4439:2;4419:18;;;4412:30;4478:32;4458:18;;;4451:60;4528:18;;4345:54:4;4198:354:5;4345:54:4;4410:44;;-1:-1:-1;;;4410:44:4;;4434:10;4410:44;;;4731:51:5;4798:18;;;4791:34;;;-1:-1:-1;;;;;4410:23:4;;;;;4704:18:5;;4410:44:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4464:22:4;;4501:1;4464:22;;;:14;:22;;;;;;;;4487:10;4464:34;;;;;;;:38;;;4544:17;:29;;;;;;;:33;;4464:14;4544:33;:::i;:::-;4530:10;4512:29;;;;:17;:29;;;;;:65;-1:-1:-1;;4226:358:4:o;2383:322::-;-1:-1:-1;;;;;2515:24:4;;2488:7;2515:24;;;:17;:24;;;;;;2511:43;;-1:-1:-1;2553:1:4;2546:8;;2511:43;2566:13;2581:16;2601:21;2615:6;2601:13;:21::i;:::-;2565:57;;-1:-1:-1;2565:57:4;-1:-1:-1;2684:12:4;2565:57;2684:2;:12;:::i;:::-;-1:-1:-1;;;;;2642:22:4;;;;;;;:14;:22;;;;;;;;:29;;;;;;;;;;:37;;2674:5;;2642:37;:::i;:::-;2641:56;;;;:::i;:::-;2633:65;;;;2383:322;;;;;:::o;701:30::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;701:30:4;;-1:-1:-1;701:30:4;:::o;1277:286::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1332:9:4::1;1327:230;1351:7;:14:::0;1347:18;::::1;1327:230;;;1386:17;1406:7;1414:1;1406:10;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;1406:10:4::1;::::0;-1:-1:-1;1455:28:4::1;1406:10:::0;1455:17:::1;:28::i;:::-;1497:13;::::0;:49:::1;::::0;-1:-1:-1;;;1497:49:4;;-1:-1:-1;;;;;4749:32:5;;;1497:49:4::1;::::0;::::1;4731:51:5::0;4798:18;;;4791:34;;;1430:53:4;;-1:-1:-1;1497:13:4;::::1;::::0;:22:::1;::::0;4704:18:5;;1497:49:4::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1372:185;;1367:3;;;;;:::i;:::-;;;;1327:230;;;;1277:286::o:0;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;993:162:4:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1106:29:4;;::::1;;::::0;;;:21:::1;:29;::::0;;;;:42;;-1:-1:-1;;;;;;1106:42:4::1;::::0;;;::::1;;::::0;;993:162::o;1704:393::-;-1:-1:-1;;;;;1794:24:4;;1767:7;1794:24;;;:17;:24;;;;;;1786:56;;;;-1:-1:-1;;;1786:56:4;;7209:2:5;1786:56:4;;;7191:21:5;7248:2;7228:18;;;7221:30;-1:-1:-1;;;7267:18:5;;;7260:45;7322:18;;1786:56:4;7007:339:5;1786:56:4;1853:18;1890:9;1885:178;1909:13;:20;1905:24;;1885:178;;;2008:44;2028:5;2035:13;2049:1;2035:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2035:16:4;2008:19;:44::i;:::-;1979:73;;:10;:73;:::i;:::-;1950:102;-1:-1:-1;1931:3:4;;;;:::i;:::-;;;;1885:178;;;-1:-1:-1;2080:10:4;1704:393;-1:-1:-1;;1704:393:4:o;5310:225::-;5371:4;;5387:119;5411:13;:20;5407:24;;5387:119;;;5476:6;-1:-1:-1;;;;;5456:26:4;:13;5470:1;5456:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;5456:16:4;:26;5452:43;;;-1:-1:-1;5491:4:4;;5310:225;-1:-1:-1;;5310:225:4:o;5452:43::-;5433:3;;;;:::i;:::-;;;;5387:119;;;-1:-1:-1;5523:5:4;;5310:225;-1:-1:-1;;5310:225:4:o;2882:448::-;-1:-1:-1;;;;;3025:29:4;;;2966:7;3025:29;;;:21;:29;;;;;;;3194:27;;-1:-1:-1;;;3194:27:4;;;;2966:7;;;;3025:29;;;;;2966:7;;3025:29;;3194:25;;:27;;;;;;;;;;;;;;;3025:29;3194:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3169:52;;;;;;3231:16;3258:9;-1:-1:-1;;;;;3258:18:4;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3306:5;;3250:29;;;;;-1:-1:-1;3306:5:4;;-1:-1:-1;;;;;2882:448:4:o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;8493:2:5;1926:73:0::1;::::0;::::1;8475:21:5::0;8532:2;8512:18;;;8505:30;8571:34;8551:18;;;8544:62;-1:-1:-1;;;8622:18:5;;;8615:36;8668:19;;1926:73:0::1;8291:402:5::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;671:24:4:-:0;;;;;;;;;;;;4729:209;-1:-1:-1;;;;;4816:22:4;;;4849:1;4816:22;;;:14;:22;;;;;;;;:29;;;;;;;;;;4812:120;;-1:-1:-1;;;;;4893:24:4;;;;;;:17;:24;;;;;;:28;;4920:1;4893:28;:::i;:::-;-1:-1:-1;;;;;4866:24:4;;;;;;:17;:24;;;;;:55;4729:209;;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:173:5:-;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;373:9;360:23;350:33;;402:38;436:2;425:9;421:18;402:38;:::i;:::-;392:48;;192:254;;;;;:::o;673:186::-;732:6;785:2;773:9;764:7;760:23;756:32;753:52;;;801:1;798;791:12;753:52;824:29;843:9;824:29;:::i;:::-;814:39;673:186;-1:-1:-1;;;673:186:5:o;1072:260::-;1140:6;1148;1201:2;1189:9;1180:7;1176:23;1172:32;1169:52;;;1217:1;1214;1207:12;1169:52;1240:29;1259:9;1240:29;:::i;:::-;1230:39;;1288:38;1322:2;1311:9;1307:18;1288:38;:::i;1519:180::-;1578:6;1631:2;1619:9;1610:7;1606:23;1602:32;1599:52;;;1647:1;1644;1637:12;1599:52;-1:-1:-1;1670:23:5;;1519:180;-1:-1:-1;1519:180:5:o;3290:277::-;3357:6;3410:2;3398:9;3389:7;3385:23;3381:32;3378:52;;;3426:1;3423;3416:12;3378:52;3458:9;3452:16;3511:5;3504:13;3497:21;3490:5;3487:32;3477:60;;3533:1;3530;3523:12;3572:127;3633:10;3628:3;3624:20;3621:1;3614:31;3664:4;3661:1;3654:15;3688:4;3685:1;3678:15;3704:128;3744:3;3775:1;3771:6;3768:1;3765:13;3762:39;;;3781:18;;:::i;:::-;-1:-1:-1;3817:9:5;;3704:128::o;3837:356::-;4039:2;4021:21;;;4058:18;;;4051:30;4117:34;4112:2;4097:18;;4090:62;4184:2;4169:18;;3837:356::o;4836:125::-;4876:4;4904:1;4901;4898:8;4895:34;;;4909:18;;:::i;:::-;-1:-1:-1;4946:9:5;;4836:125::o;4966:422::-;5055:1;5098:5;5055:1;5112:270;5133:7;5123:8;5120:21;5112:270;;;5192:4;5188:1;5184:6;5180:17;5174:4;5171:27;5168:53;;;5201:18;;:::i;:::-;5251:7;5241:8;5237:22;5234:55;;;5271:16;;;;5234:55;5350:22;;;;5310:15;;;;5112:270;;;5116:3;4966:422;;;;;:::o;5393:806::-;5442:5;5472:8;5462:80;;-1:-1:-1;5513:1:5;5527:5;;5462:80;5561:4;5551:76;;-1:-1:-1;5598:1:5;5612:5;;5551:76;5643:4;5661:1;5656:59;;;;5729:1;5724:130;;;;5636:218;;5656:59;5686:1;5677:10;;5700:5;;;5724:130;5761:3;5751:8;5748:17;5745:43;;;5768:18;;:::i;:::-;-1:-1:-1;;5824:1:5;5810:16;;5839:5;;5636:218;;5938:2;5928:8;5925:16;5919:3;5913:4;5910:13;5906:36;5900:2;5890:8;5887:16;5882:2;5876:4;5873:12;5869:35;5866:77;5863:159;;;-1:-1:-1;5975:19:5;;;6007:5;;5863:159;6054:34;6079:8;6073:4;6054:34;:::i;:::-;6124:6;6120:1;6116:6;6112:19;6103:7;6100:32;6097:58;;;6135:18;;:::i;:::-;6173:20;;5393:806;-1:-1:-1;;;5393:806:5:o;6204:131::-;6264:5;6293:36;6320:8;6314:4;6293:36;:::i;6340:168::-;6380:7;6446:1;6442;6438:6;6434:14;6431:1;6428:21;6423:1;6416:9;6409:17;6405:45;6402:71;;;6453:18;;:::i;:::-;-1:-1:-1;6493:9:5;;6340:168::o;6513:217::-;6553:1;6579;6569:132;;6623:10;6618:3;6614:20;6611:1;6604:31;6658:4;6655:1;6648:15;6686:4;6683:1;6676:15;6569:132;-1:-1:-1;6715:9:5;;6513:217::o;6735:127::-;6796:10;6791:3;6787:20;6784:1;6777:31;6827:4;6824:1;6817:15;6851:4;6848:1;6841:15;6867:135;6906:3;-1:-1:-1;;6927:17:5;;6924:43;;;6947:18;;:::i;:::-;-1:-1:-1;6994:1:5;6983:13;;6867:135::o;7351:179::-;7429:13;;7482:22;7471:34;;7461:45;;7451:73;;7520:1;7517;7510:12;7535:473;7638:6;7646;7654;7662;7670;7723:3;7711:9;7702:7;7698:23;7694:33;7691:53;;;7740:1;7737;7730:12;7691:53;7763:39;7792:9;7763:39;:::i;:::-;7753:49;;7842:2;7831:9;7827:18;7821:25;7811:35;;7886:2;7875:9;7871:18;7865:25;7855:35;;7930:2;7919:9;7915:18;7909:25;7899:35;;7953:49;7997:3;7986:9;7982:19;7953:49;:::i;:::-;7943:59;;7535:473;;;;;;;;:::o;8013:273::-;8081:6;8134:2;8122:9;8113:7;8109:23;8105:32;8102:52;;;8150:1;8147;8140:12;8102:52;8182:9;8176:16;8232:4;8225:5;8221:16;8214:5;8211:27;8201:55;;8252:1;8249;8242:12",
  "language": "Solidity",
  "natspec": {
    "author": "DJ Evan",
    "details": "available functions: stakeTokens, unStakeTokens, issueTokens, addAllowedTokens, getValue",
    "kind": "dev",
    "methods": {
      "addAllowedTokens(address)": {
        "details": "only owner may call this function",
        "notice": "allow token to be staked",
        "params": {
          "_token": "token address"
        }
      },
      "getSingleTokenValue(address,address)": {
        "details": "converts token value to USDtoken's price * user's staking balance",
        "notice": "get value of each user's token",
        "params": {
          "_token": "token address",
          "_user": "selected user address"
        },
        "returns": {
          "_0": "uint256 the converted token amount"
        }
      },
      "getTokenValue(address)": {
        "details": "gather price feed from chainlink",
        "notice": "get token price",
        "params": {
          "_token": "token address"
        },
        "returns": {
          "_0": "uint256 price feed, decimals"
        }
      },
      "getUserTotalValue(address)": {
        "notice": "get all user's value locked",
        "params": {
          "_user": "selected user address"
        },
        "returns": {
          "_0": "uint256 user's TVL"
        }
      },
      "issueTokens()": {
        "details": "only owner may call this function",
        "notice": "send stakers token reward based on TVL"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setPriceFeedContract(address,address)": {
        "details": "only owner may call this function",
        "notice": "set price feed for this contract"
      },
      "stakeTokens(uint256,address)": {
        "details": "only for certain tokens",
        "notice": "stake token to the contract",
        "params": {
          "_amount": "how much token wanted to be staked",
          "_token": "token address"
        }
      },
      "tokenIsAllowed(address)": {
        "notice": "check is token allowed to stake",
        "params": {
          "_token": "token address"
        },
        "returns": {
          "_0": "boolean"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unstakeTokens(address)": {
        "notice": "transfer the staked balance back to the owner",
        "params": {
          "_token": "token address"
        }
      }
    },
    "notice": "Controls logic for the defi",
    "title": "Token Farm Contract",
    "version": 1
  },
  "offset": [
    439,
    5537
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60AB5852 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xAF3F5E22 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAF3F5E22 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xDD5B8467 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xF1C5D6C2 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x60AB5852 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x877DD39D EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29161A00 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x29161A00 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x2D1AD8B8 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x3EC4113B EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x55B08ABC EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x5E5F2E26 EQ PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBEA440D EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xCD4720E EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x171E44EA EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x27927B3E EQ PUSH2 0x173 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xC58 JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x143 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12E PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST PUSH2 0x143 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x157 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x12E PUSH2 0x728 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x825 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x143 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x270 CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST PUSH2 0x288 PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x157 JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x157 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0xC84 JUMP JUMPDEST PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x33B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206D6F7265207468616E2030000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x344 DUP2 PUSH2 0x96E JUMP JUMPDEST PUSH2 0x39E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320746F6B656E2063757272656E746C79206D61796E6F742062652073 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1D185AD959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x332 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0xCE9 JUMP JUMPDEST POP PUSH2 0x420 CALLER DUP3 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x44F SWAP1 DUP4 SWAP1 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x2 SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD EQ ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E672062616C616E63652063616E6E6F74206265207A65726F0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x332 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x605 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x629 SWAP2 SWAP1 PUSH2 0xCE9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x663 SWAP2 SWAP1 PUSH2 0xD6E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x69C JUMPI POP PUSH1 0x0 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6A8 DUP5 PUSH2 0x9D8 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x6B8 DUP2 PUSH1 0xA PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x6E9 SWAP1 DUP5 SWAP1 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0xE94 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x822 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x774 JUMPI PUSH2 0x774 PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x793 DUP3 PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x80C SWAP2 SWAP1 PUSH2 0xCE9 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x81A SWAP1 PUSH2 0xECC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x755 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH2 0x859 PUSH1 0x0 PUSH2 0xBEC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x885 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BC81D1BDAD95B881CDD185AD959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x332 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x967 JUMPI PUSH2 0x949 DUP5 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x92F JUMPI PUSH2 0x92F PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x677 JUMP JUMPDEST PUSH2 0x953 SWAP1 DUP4 PUSH2 0xD21 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x95F DUP2 PUSH2 0xECC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x90E JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x9CF JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x999 JUMPI PUSH2 0x999 PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x9BD JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x9C7 DUP2 PUSH2 0xECC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x972 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP5 SWAP4 SWAP2 AND SWAP2 DUP3 SWAP2 DUP5 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC7 SWAP2 SWAP1 PUSH2 0xF51 JUMP JUMPDEST SWAP2 SWAP8 PUSH1 0xFF SWAP1 SWAP3 AND SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x332 SWAP1 PUSH2 0xD39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x332 JUMP JUMPDEST PUSH2 0x822 DUP2 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x4C7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBCF SWAP1 PUSH1 0x1 PUSH2 0xD21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xC7B PUSH1 0x20 DUP5 ADD PUSH2 0xC3C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC9F DUP3 PUSH2 0xC3C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC2 DUP4 PUSH2 0xC3C JUMP JUMPDEST SWAP2 POP PUSH2 0xC7B PUSH1 0x20 DUP5 ADD PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD34 JUMPI PUSH2 0xD34 PUSH2 0xD0B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xD80 JUMPI PUSH2 0xD80 PUSH2 0xD0B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xDC0 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xDA6 JUMPI PUSH2 0xDA6 PUSH2 0xD0B JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xDB3 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xD8A JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDD7 JUMPI POP PUSH1 0x1 PUSH2 0x6F8 JUMP JUMPDEST DUP2 PUSH2 0xDE4 JUMPI POP PUSH1 0x0 PUSH2 0x6F8 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xDFA JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xE04 JUMPI PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xE15 JUMPI PUSH2 0xE15 PUSH2 0xD0B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x6F8 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xE43 JUMPI POP DUP2 DUP2 EXP PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0xE4D DUP4 DUP4 PUSH2 0xD85 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xE61 JUMPI PUSH2 0xE61 PUSH2 0xD0B JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9F DUP4 DUP4 PUSH2 0xDC8 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE8F JUMPI PUSH2 0xE8F PUSH2 0xD0B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEB1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xEE0 JUMPI PUSH2 0xEE0 PUSH2 0xD0B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xF19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF22 DUP7 PUSH2 0xEE7 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0xF45 PUSH1 0x80 DUP8 ADD PUSH2 0xEE7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xC9F JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x53C7989235A677FBB86DCD4EAC6B3D06AE0615D63FA72677 0xE5 SWAP9 0x22 0x25 0xCD SWAP10 SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        439,
        5537
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x60AB5852"
    },
    "38": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xAF3F5E22"
    },
    "49": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "GT",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xAF3F5E22"
    },
    "60": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x262"
    },
    "64": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD5B8467"
    },
    "71": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x275"
    },
    "75": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF1C5D6C2"
    },
    "82": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x298"
    },
    "86": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2C0"
    },
    "97": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFD5E6DD1"
    },
    "104": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "EQ",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2D3"
    },
    "108": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "112": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "REVERT",
      "path": "4"
    },
    "113": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "114": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "115": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x60AB5852"
    },
    "120": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "EQ",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22E"
    },
    "124": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x715018A6"
    },
    "131": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x236"
    },
    "135": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x877DD39D"
    },
    "142": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "EQ",
      "path": "4"
    },
    "143": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x23E"
    },
    "146": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8DA5CB5B"
    },
    "153": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "EQ",
      "path": "4"
    },
    "154": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x251"
    },
    "157": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "158": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "161": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "REVERT",
      "path": "4"
    },
    "162": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "163": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "164": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x29161A00"
    },
    "169": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "GT",
      "path": "4"
    },
    "170": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "174": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "175": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x29161A00"
    },
    "180": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "EQ",
      "path": "4"
    },
    "181": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x19C"
    },
    "184": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "185": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "186": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x2D1AD8B8"
    },
    "191": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "EQ",
      "path": "4"
    },
    "192": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D5"
    },
    "195": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "196": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "197": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x3EC4113B"
    },
    "202": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "EQ",
      "path": "4"
    },
    "203": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E8"
    },
    "206": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "207": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "208": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x55B08ABC"
    },
    "213": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "EQ",
      "path": "4"
    },
    "214": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FB"
    },
    "217": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "218": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "219": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x5E5F2E26"
    },
    "224": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "EQ",
      "path": "4"
    },
    "225": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21B"
    },
    "228": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "229": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "232": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "REVERT",
      "path": "4"
    },
    "233": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "234": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "235": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xBEA440D"
    },
    "240": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "EQ",
      "path": "4"
    },
    "241": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "245": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "246": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xCD4720E"
    },
    "251": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "EQ",
      "path": "4"
    },
    "252": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x130"
    },
    "255": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "256": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "257": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x171E44EA"
    },
    "262": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "EQ",
      "path": "4"
    },
    "263": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x160"
    },
    "266": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "267": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "268": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x27927B3E"
    },
    "273": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "EQ",
      "path": "4"
    },
    "274": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x173"
    },
    "277": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "278": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "279": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "DUP1",
      "path": "4"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        439,
        5537
      ],
      "op": "REVERT",
      "path": "4"
    },
    "283": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3523,
        4108
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "284": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3523,
        4108
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E"
    },
    "287": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3523,
        4108
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x129"
    },
    "290": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3523,
        4108
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "291": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3523,
        4108
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "293": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3523,
        4108
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC58"
    },
    "296": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        3523,
        4108
      ],
      "op": "JUMP",
      "path": "4"
    },
    "297": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3523,
        4108
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "298": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3523,
        4108
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E6"
    },
    "301": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        3523,
        4108
      ],
      "op": "JUMP",
      "path": "4"
    },
    "302": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3523,
        4108
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "303": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3523,
        4108
      ],
      "op": "STOP",
      "path": "4"
    },
    "304": {
      "offset": [
        738,
        765
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "305": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        738,
        765
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "307": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        738,
        765
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "308": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        738,
        765
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x143"
    },
    "311": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        738,
        765
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "318": {
      "op": "SHL"
    },
    "319": {
      "op": "SUB"
    },
    "320": {
      "offset": [
        738,
        765
      ],
      "op": "AND",
      "path": "4"
    },
    "321": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        738,
        765
      ],
      "op": "DUP2",
      "path": "4"
    },
    "322": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        738,
        765
      ],
      "op": "JUMP",
      "path": "4"
    },
    "323": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        738,
        765
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "324": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        738,
        765
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "326": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        738,
        765
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "333": {
      "op": "SHL"
    },
    "334": {
      "op": "SUB"
    },
    "335": {
      "op": "SWAP1"
    },
    "336": {
      "op": "SWAP2"
    },
    "337": {
      "op": "AND"
    },
    "338": {
      "op": "DUP2"
    },
    "339": {
      "op": "MSTORE"
    },
    "340": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "342": {
      "op": "ADD"
    },
    "343": {
      "offset": [
        738,
        765
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "344": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        738,
        765
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "346": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        738,
        765
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "347": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        738,
        765
      ],
      "op": "DUP1",
      "path": "4"
    },
    "348": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        738,
        765
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "349": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        738,
        765
      ],
      "op": "SUB",
      "path": "4"
    },
    "350": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        738,
        765
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "351": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        738,
        765
      ],
      "op": "RETURN",
      "path": "4"
    },
    "352": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5081,
        5183
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "353": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5081,
        5183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E"
    },
    "356": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5081,
        5183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16E"
    },
    "359": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5081,
        5183
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "360": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5081,
        5183
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "362": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5081,
        5183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC84"
    },
    "365": {
      "fn": "TokenFarm.addAllowedTokens",
      "jump": "i",
      "offset": [
        5081,
        5183
      ],
      "op": "JUMP",
      "path": "4"
    },
    "366": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5081,
        5183
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "367": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5081,
        5183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4CB"
    },
    "370": {
      "fn": "TokenFarm.addAllowedTokens",
      "jump": "i",
      "offset": [
        5081,
        5183
      ],
      "op": "JUMP",
      "path": "4"
    },
    "371": {
      "offset": [
        608,
        664
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "372": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x143"
    },
    "375": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x181"
    },
    "378": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "379": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "381": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC84"
    },
    "384": {
      "fn": "TokenFarm.addAllowedTokens",
      "jump": "i",
      "offset": [
        608,
        664
      ],
      "op": "JUMP",
      "path": "4"
    },
    "385": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "386": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "388": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "390": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "391": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "393": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "394": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "DUP2",
      "path": "4"
    },
    "395": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "396": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "398": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "399": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "400": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "407": {
      "op": "SHL"
    },
    "408": {
      "op": "SUB"
    },
    "409": {
      "offset": [
        608,
        664
      ],
      "op": "AND",
      "path": "4"
    },
    "410": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "DUP2",
      "path": "4"
    },
    "411": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        608,
        664
      ],
      "op": "JUMP",
      "path": "4"
    },
    "412": {
      "offset": [
        475,
        544
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "413": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C7"
    },
    "416": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AA"
    },
    "419": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "420": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "422": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCA6"
    },
    "425": {
      "fn": "TokenFarm.addAllowedTokens",
      "jump": "i",
      "offset": [
        475,
        544
      ],
      "op": "JUMP",
      "path": "4"
    },
    "426": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "427": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "429": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "431": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "432": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "DUP2",
      "path": "4"
    },
    "433": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "434": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "436": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "437": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "DUP4",
      "path": "4"
    },
    "438": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "439": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "441": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "DUP1",
      "path": "4"
    },
    "442": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "DUP5",
      "path": "4"
    },
    "443": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "444": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "445": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "446": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "447": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "448": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "DUP3",
      "path": "4"
    },
    "449": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "450": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "451": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "452": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "453": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "DUP2",
      "path": "4"
    },
    "454": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "JUMP",
      "path": "4"
    },
    "455": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "456": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "458": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        475,
        544
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "459": {
      "op": "SWAP1"
    },
    "460": {
      "op": "DUP2"
    },
    "461": {
      "op": "MSTORE"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "464": {
      "op": "ADD"
    },
    "465": {
      "offset": [
        475,
        544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x157"
    },
    "468": {
      "op": "JUMP"
    },
    "469": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4226,
        4584
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "470": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4226,
        4584
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E"
    },
    "473": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4226,
        4584
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E3"
    },
    "476": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4226,
        4584
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "477": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4226,
        4584
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "479": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4226,
        4584
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC84"
    },
    "482": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        4226,
        4584
      ],
      "op": "JUMP",
      "path": "4"
    },
    "483": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4226,
        4584
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "484": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4226,
        4584
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x547"
    },
    "487": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        4226,
        4584
      ],
      "op": "JUMP",
      "path": "4"
    },
    "488": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2383,
        2705
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "489": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2383,
        2705
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C7"
    },
    "492": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2383,
        2705
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F6"
    },
    "495": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2383,
        2705
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "496": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2383,
        2705
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "498": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2383,
        2705
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCA6"
    },
    "501": {
      "fn": "TokenFarm.getSingleTokenValue",
      "jump": "i",
      "offset": [
        2383,
        2705
      ],
      "op": "JUMP",
      "path": "4"
    },
    "502": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2383,
        2705
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "503": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2383,
        2705
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x677"
    },
    "506": {
      "fn": "TokenFarm.getSingleTokenValue",
      "jump": "i",
      "offset": [
        2383,
        2705
      ],
      "op": "JUMP",
      "path": "4"
    },
    "507": {
      "offset": [
        550,
        602
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "508": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C7"
    },
    "511": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x209"
    },
    "514": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "515": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "517": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC84"
    },
    "520": {
      "fn": "TokenFarm.getSingleTokenValue",
      "jump": "i",
      "offset": [
        550,
        602
      ],
      "op": "JUMP",
      "path": "4"
    },
    "521": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "522": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "524": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "526": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "527": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "529": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "530": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "DUP2",
      "path": "4"
    },
    "531": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "532": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "534": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "535": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "536": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "537": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "DUP2",
      "path": "4"
    },
    "538": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        550,
        602
      ],
      "op": "JUMP",
      "path": "4"
    },
    "539": {
      "offset": [
        701,
        731
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "540": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x143"
    },
    "543": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x229"
    },
    "546": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "547": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "549": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCD0"
    },
    "552": {
      "fn": "TokenFarm.getSingleTokenValue",
      "jump": "i",
      "offset": [
        701,
        731
      ],
      "op": "JUMP",
      "path": "4"
    },
    "553": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "554": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6FE"
    },
    "557": {
      "fn": "TokenFarm.getSingleTokenValue",
      "jump": "i",
      "offset": [
        701,
        731
      ],
      "op": "JUMP",
      "path": "4"
    },
    "558": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1277,
        1563
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "559": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1277,
        1563
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E"
    },
    "562": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1277,
        1563
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x728"
    },
    "565": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        1277,
        1563
      ],
      "op": "JUMP",
      "path": "4"
    },
    "566": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "567": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "570": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x825"
    },
    "573": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "574": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        993,
        1155
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "575": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        993,
        1155
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E"
    },
    "578": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        993,
        1155
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x24C"
    },
    "581": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        993,
        1155
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "582": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        993,
        1155
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "584": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        993,
        1155
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCA6"
    },
    "587": {
      "fn": "TokenFarm.setPriceFeedContract",
      "jump": "i",
      "offset": [
        993,
        1155
      ],
      "op": "JUMP",
      "path": "4"
    },
    "588": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        993,
        1155
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "589": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        993,
        1155
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x85B"
    },
    "592": {
      "fn": "TokenFarm.setPriceFeedContract",
      "jump": "i",
      "offset": [
        993,
        1155
      ],
      "op": "JUMP",
      "path": "4"
    },
    "593": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "594": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "596": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "603": {
      "op": "SHL"
    },
    "604": {
      "op": "SUB"
    },
    "605": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "606": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143"
    },
    "609": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "610": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1704,
        2097
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "611": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1704,
        2097
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C7"
    },
    "614": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1704,
        2097
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x270"
    },
    "617": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1704,
        2097
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "618": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1704,
        2097
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "620": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1704,
        2097
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC84"
    },
    "623": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        1704,
        2097
      ],
      "op": "JUMP",
      "path": "4"
    },
    "624": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1704,
        2097
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "625": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1704,
        2097
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8B3"
    },
    "628": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        1704,
        2097
      ],
      "op": "JUMP",
      "path": "4"
    },
    "629": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5310,
        5535
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "630": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5310,
        5535
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x288"
    },
    "633": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5310,
        5535
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x283"
    },
    "636": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5310,
        5535
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "637": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5310,
        5535
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "639": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5310,
        5535
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC84"
    },
    "642": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        5310,
        5535
      ],
      "op": "JUMP",
      "path": "4"
    },
    "643": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5310,
        5535
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "644": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5310,
        5535
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x96E"
    },
    "647": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        5310,
        5535
      ],
      "op": "JUMP",
      "path": "4"
    },
    "648": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5310,
        5535
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "649": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5310,
        5535
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "651": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5310,
        5535
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "652": {
      "op": "SWAP1"
    },
    "653": {
      "op": "ISZERO"
    },
    "654": {
      "op": "ISZERO"
    },
    "655": {
      "op": "DUP2"
    },
    "656": {
      "op": "MSTORE"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "659": {
      "op": "ADD"
    },
    "660": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5310,
        5535
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x157"
    },
    "663": {
      "op": "JUMP"
    },
    "664": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2882,
        3330
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "665": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2882,
        3330
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2AB"
    },
    "668": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2882,
        3330
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A6"
    },
    "671": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2882,
        3330
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "672": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2882,
        3330
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "674": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2882,
        3330
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC84"
    },
    "677": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "i",
      "offset": [
        2882,
        3330
      ],
      "op": "JUMP",
      "path": "4"
    },
    "678": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2882,
        3330
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "679": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2882,
        3330
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9D8"
    },
    "682": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "i",
      "offset": [
        2882,
        3330
      ],
      "op": "JUMP",
      "path": "4"
    },
    "683": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2882,
        3330
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "684": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2882,
        3330
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "686": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2882,
        3330
      ],
      "op": "DUP1",
      "path": "4"
    },
    "687": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2882,
        3330
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "688": {
      "op": "SWAP3"
    },
    "689": {
      "op": "DUP4"
    },
    "690": {
      "op": "MSTORE"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "693": {
      "op": "DUP4"
    },
    "694": {
      "op": "ADD"
    },
    "695": {
      "op": "SWAP2"
    },
    "696": {
      "op": "SWAP1"
    },
    "697": {
      "op": "SWAP2"
    },
    "698": {
      "op": "MSTORE"
    },
    "699": {
      "op": "ADD"
    },
    "700": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2882,
        3330
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x157"
    },
    "703": {
      "op": "JUMP"
    },
    "704": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "705": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "708": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CE"
    },
    "711": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "712": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "714": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC84"
    },
    "717": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "718": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "719": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD9"
    },
    "722": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "723": {
      "offset": [
        671,
        695
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "724": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        671,
        695
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x143"
    },
    "727": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        671,
        695
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E1"
    },
    "730": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        671,
        695
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "731": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        671,
        695
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "733": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        671,
        695
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCD0"
    },
    "736": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        671,
        695
      ],
      "op": "JUMP",
      "path": "4"
    },
    "737": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        671,
        695
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "738": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        671,
        695
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB71"
    },
    "741": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        671,
        695
      ],
      "op": "JUMP",
      "path": "4"
    },
    "742": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3523,
        4108
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "743": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3612,
        3613
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 1,
      "value": "0x0"
    },
    "745": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3602,
        3609
      ],
      "op": "DUP3",
      "path": "4"
    },
    "746": {
      "branch": 32,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3602,
        3613
      ],
      "op": "GT",
      "path": "4"
    },
    "747": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3594,
        3644
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x33B"
    },
    "750": {
      "branch": 32,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3594,
        3644
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "751": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3594,
        3644
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "753": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3594,
        3644
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "754": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "758": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "760": {
      "op": "SHL"
    },
    "761": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3594,
        3644
      ],
      "op": "DUP2",
      "path": "4"
    },
    "762": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3594,
        3644
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "765": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3594,
        3644
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "767": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3594,
        3644
      ],
      "op": "DUP3",
      "path": "4"
    },
    "768": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3594,
        3644
      ],
      "op": "ADD",
      "path": "4"
    },
    "769": {
      "op": "MSTORE"
    },
    "770": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "774": {
      "op": "DUP3"
    },
    "775": {
      "op": "ADD"
    },
    "776": {
      "op": "MSTORE"
    },
    "777": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D757374206265206D6F7265207468616E2030000000000000"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "812": {
      "op": "DUP3"
    },
    "813": {
      "op": "ADD"
    },
    "814": {
      "op": "MSTORE"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "817": {
      "op": "ADD"
    },
    "818": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3594,
        3644
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "819": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3594,
        3644
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "821": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3594,
        3644
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "822": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3594,
        3644
      ],
      "op": "DUP1",
      "path": "4"
    },
    "823": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3594,
        3644
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "824": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3594,
        3644
      ],
      "op": "SUB",
      "path": "4"
    },
    "825": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3594,
        3644
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "826": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3594,
        3644
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "827": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3594,
        3644
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "828": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3675,
        3697
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 2,
      "value": "0x344"
    },
    "831": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3690,
        3696
      ],
      "op": "DUP2",
      "path": "4"
    },
    "832": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3675,
        3689
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x96E"
    },
    "835": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        3675,
        3697
      ],
      "op": "JUMP",
      "path": "4"
    },
    "836": {
      "branch": 33,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3675,
        3697
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "837": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3654,
        3760
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x39E"
    },
    "840": {
      "branch": 33,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3654,
        3760
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "841": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3654,
        3760
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "843": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3654,
        3760
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "844": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "848": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "850": {
      "op": "SHL"
    },
    "851": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3654,
        3760
      ],
      "op": "DUP2",
      "path": "4"
    },
    "852": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3654,
        3760
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "855": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3654,
        3760
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "857": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3654,
        3760
      ],
      "op": "DUP3",
      "path": "4"
    },
    "858": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3654,
        3760
      ],
      "op": "ADD",
      "path": "4"
    },
    "859": {
      "op": "MSTORE"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "864": {
      "op": "DUP3"
    },
    "865": {
      "op": "ADD"
    },
    "866": {
      "op": "MSTORE"
    },
    "867": {
      "op": "PUSH32",
      "value": "0x5468697320746F6B656E2063757272656E746C79206D61796E6F742062652073"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "902": {
      "op": "DUP3"
    },
    "903": {
      "op": "ADD"
    },
    "904": {
      "op": "MSTORE"
    },
    "905": {
      "op": "PUSH5",
      "value": "0x1D185AD959"
    },
    "911": {
      "op": "PUSH1",
      "value": "0xDA"
    },
    "913": {
      "op": "SHL"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "916": {
      "op": "DUP3"
    },
    "917": {
      "op": "ADD"
    },
    "918": {
      "op": "MSTORE"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "921": {
      "op": "ADD"
    },
    "922": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3654,
        3760
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x332"
    },
    "925": {
      "op": "JUMP"
    },
    "926": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3654,
        3760
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "927": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0x40"
    },
    "929": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "930": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "935": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "937": {
      "op": "SHL"
    },
    "938": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "DUP2",
      "path": "4"
    },
    "939": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "940": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3798,
        3808
      ],
      "op": "CALLER",
      "path": "4"
    },
    "941": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "943": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "DUP3",
      "path": "4"
    },
    "944": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "ADD",
      "path": "4"
    },
    "945": {
      "op": "MSTORE"
    },
    "946": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3818,
        3822
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "949": {
      "op": "DUP3"
    },
    "950": {
      "op": "ADD"
    },
    "951": {
      "op": "MSTORE"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "954": {
      "op": "DUP2"
    },
    "955": {
      "op": "ADD"
    },
    "956": {
      "op": "DUP4"
    },
    "957": {
      "op": "SWAP1"
    },
    "958": {
      "op": "MSTORE"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "SUB"
    },
    "967": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3797
      ],
      "op": "DUP3",
      "path": "4"
    },
    "968": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3797
      ],
      "op": "AND",
      "path": "4"
    },
    "969": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3797
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "970": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3797
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "975": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3797
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "978": {
      "op": "ADD"
    },
    "979": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "981": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "983": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "984": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "DUP1",
      "path": "4"
    },
    "985": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "DUP4",
      "path": "4"
    },
    "986": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "SUB",
      "path": "4"
    },
    "987": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "DUP2",
      "path": "4"
    },
    "988": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "990": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "DUP8",
      "path": "4"
    },
    "991": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "GAS",
      "path": "4"
    },
    "992": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "CALL",
      "path": "4"
    },
    "993": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "994": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "DUP1",
      "path": "4"
    },
    "995": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "996": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3F1"
    },
    "999": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1000": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1001": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1003": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1004": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1005": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1006": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1008": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1009": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1010": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "POP",
      "path": "4"
    },
    "1011": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "POP",
      "path": "4"
    },
    "1012": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "POP",
      "path": "4"
    },
    "1013": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "POP",
      "path": "4"
    },
    "1014": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1016": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1017": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1018": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1020": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "NOT",
      "path": "4"
    },
    "1021": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1023": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1024": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "ADD",
      "path": "4"
    },
    "1025": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "AND",
      "path": "4"
    },
    "1026": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1027": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "ADD",
      "path": "4"
    },
    "1028": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1029": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1031": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1032": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "POP",
      "path": "4"
    },
    "1033": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1034": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "ADD",
      "path": "4"
    },
    "1035": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1036": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x415"
    },
    "1039": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1040": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1041": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCE9"
    },
    "1044": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        3770,
        3833
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1045": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1046": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3770,
        3833
      ],
      "op": "POP",
      "path": "4"
    },
    "1047": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3844,
        3887
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 4,
      "value": "0x420"
    },
    "1050": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3868,
        3878
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1051": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3880,
        3886
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1052": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3844,
        3867
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB81"
    },
    "1055": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        3844,
        3887
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1056": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3844,
        3887
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "op": "SUB"
    },
    "1065": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3968
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 5
    },
    "1066": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3968
      ],
      "op": "AND",
      "path": "4"
    },
    "1067": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3968
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1069": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3968
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1070": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3968
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1071": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3968
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1072": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3960
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1074": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3968
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1076": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3968
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1077": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3968
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1078": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3968
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1079": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3968
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1081": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3968
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1082": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3968
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1083": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3968
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1084": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3969,
        3979
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1085": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3980
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1086": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3980
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1087": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3980
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1088": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3980
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1089": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3980
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1090": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3980
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1091": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3980
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1092": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        3980
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1093": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        4002
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x44F"
    },
    "1096": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        4002
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1097": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3995,
        4002
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1098": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3995,
        4002
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1099": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        4002
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD21"
    },
    "1102": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        3946,
        4002
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1103": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3946,
        4002
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1110": {
      "op": "SHL"
    },
    "1111": {
      "op": "SUB"
    },
    "1112": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3919
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1113": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3919
      ],
      "op": "AND",
      "path": "4"
    },
    "1114": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3919
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1116": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3919
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1117": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3919
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1118": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3919
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1119": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3911
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1121": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3919
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1123": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3919
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1124": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3919
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1125": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3919
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1126": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3919
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1128": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3919
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1129": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3919
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1130": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3919
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1131": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3920,
        3930
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1132": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3931
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1133": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3931
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1134": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3931
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1135": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3931
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1136": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3931
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1137": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3931
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1138": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        3931
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1139": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        4002
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1140": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        4002
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1141": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        4002
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1142": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3897,
        4002
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1143": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4017,
        4034
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1145": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4017,
        4046
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1146": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4017,
        4046
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1147": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4017,
        4046
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1148": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4017,
        4046
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1149": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4017,
        4046
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1150": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4017,
        4046
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1151": {
      "branch": 34,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4017,
        4051
      ],
      "op": "EQ",
      "path": "4"
    },
    "1152": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4013,
        4102
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1153": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4013,
        4102
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4C7"
    },
    "1156": {
      "branch": 34,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4013,
        4102
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1157": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4074
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 6,
      "value": "0x4"
    },
    "1159": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1160": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1161": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1163": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1164": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "ADD",
      "path": "4"
    },
    "1165": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1166": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1169": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1170": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1171": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1172": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1173": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "1206": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "ADD",
      "path": "4"
    },
    "1207": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1208": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1215": {
      "op": "SHL"
    },
    "1216": {
      "op": "SUB"
    },
    "1217": {
      "op": "NOT"
    },
    "1218": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "AND",
      "path": "4"
    },
    "1219": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4080,
        4090
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1220": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "OR",
      "path": "4"
    },
    "1221": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1222": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4067,
        4091
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1223": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        4013,
        4102
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1224": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3523,
        4108
      ],
      "op": "POP",
      "path": "4"
    },
    "1225": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        3523,
        4108
      ],
      "op": "POP",
      "path": "4"
    },
    "1226": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "o",
      "offset": [
        3523,
        4108
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1227": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5081,
        5183
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1228": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1230": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1237": {
      "op": "SHL"
    },
    "1238": {
      "op": "SUB"
    },
    "1239": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1240": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 7
    },
    "1241": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1242": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F5"
    },
    "1245": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1246": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1248": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1249": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1255": {
      "op": "SHL"
    },
    "1256": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1257": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1258": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1260": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1261": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "1264": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1265": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD39"
    },
    "1268": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1269": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1270": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5163
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 8,
      "value": "0x5"
    },
    "1272": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1273": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1274": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1276": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1277": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "ADD",
      "path": "4"
    },
    "1278": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1279": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1282": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1283": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1284": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1285": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1286": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "1319": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "ADD",
      "path": "4"
    },
    "1320": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1321": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1328": {
      "op": "SHL"
    },
    "1329": {
      "op": "SUB"
    },
    "1330": {
      "op": "NOT"
    },
    "1331": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "AND",
      "path": "4"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1338": {
      "op": "SHL"
    },
    "1339": {
      "op": "SUB"
    },
    "1340": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1341": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1342": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1343": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "AND",
      "path": "4"
    },
    "1344": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1345": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1346": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1347": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "OR",
      "path": "4"
    },
    "1348": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1349": {
      "fn": "TokenFarm.addAllowedTokens",
      "offset": [
        5150,
        5176
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1350": {
      "fn": "TokenFarm.addAllowedTokens",
      "jump": "o",
      "offset": [
        5081,
        5183
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1351": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4226,
        4584
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1358": {
      "op": "SHL"
    },
    "1359": {
      "op": "SUB"
    },
    "1360": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4322
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1361": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4322
      ],
      "op": "AND",
      "path": "4"
    },
    "1362": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4282,
        4297
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1364": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4322
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1365": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4322
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1366": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4322
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1367": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4314
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1369": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4322
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1371": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4322
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1372": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4322
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1373": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4322
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1374": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4322
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1376": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4322
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1377": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4322
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1378": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4322
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1379": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4323,
        4333
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1380": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4334
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1381": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4334
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1382": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4334
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1383": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4334
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1384": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4334
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1385": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4334
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1386": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4334
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1387": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4300,
        4334
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1388": {
      "branch": 35,
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4353,
        4364
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 9
    },
    "1389": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4345,
        4399
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5B8"
    },
    "1392": {
      "branch": 35,
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4345,
        4399
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1393": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4345,
        4399
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1395": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4345,
        4399
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1396": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1402": {
      "op": "SHL"
    },
    "1403": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4345,
        4399
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1404": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4345,
        4399
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1407": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4345,
        4399
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1409": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4345,
        4399
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1410": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4345,
        4399
      ],
      "op": "ADD",
      "path": "4"
    },
    "1411": {
      "op": "MSTORE"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1416": {
      "op": "DUP3"
    },
    "1417": {
      "op": "ADD"
    },
    "1418": {
      "op": "MSTORE"
    },
    "1419": {
      "op": "PUSH32",
      "value": "0x5374616B696E672062616C616E63652063616E6E6F74206265207A65726F0000"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1454": {
      "op": "DUP3"
    },
    "1455": {
      "op": "ADD"
    },
    "1456": {
      "op": "MSTORE"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1459": {
      "op": "ADD"
    },
    "1460": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4345,
        4399
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x332"
    },
    "1463": {
      "op": "JUMP"
    },
    "1464": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4345,
        4399
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1465": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 10,
      "value": "0x40"
    },
    "1467": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1468": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1475": {
      "op": "SHL"
    },
    "1476": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1477": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1478": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4434,
        4444
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1479": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1481": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1482": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "ADD",
      "path": "4"
    },
    "1483": {
      "op": "MSTORE"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1486": {
      "op": "DUP2"
    },
    "1487": {
      "op": "ADD"
    },
    "1488": {
      "op": "DUP3"
    },
    "1489": {
      "op": "SWAP1"
    },
    "1490": {
      "op": "MSTORE"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1497": {
      "op": "SHL"
    },
    "1498": {
      "op": "SUB"
    },
    "1499": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4433
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1500": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4433
      ],
      "op": "AND",
      "path": "4"
    },
    "1501": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4433
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1502": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4433
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "1507": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4433
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1510": {
      "op": "ADD"
    },
    "1511": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1513": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1515": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1516": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1517": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1518": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "SUB",
      "path": "4"
    },
    "1519": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1520": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1522": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1523": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "GAS",
      "path": "4"
    },
    "1524": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "CALL",
      "path": "4"
    },
    "1525": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1526": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1527": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1528": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x605"
    },
    "1531": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1532": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1533": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1535": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1536": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1537": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1538": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1540": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1541": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1542": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "POP",
      "path": "4"
    },
    "1543": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "POP",
      "path": "4"
    },
    "1544": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "POP",
      "path": "4"
    },
    "1545": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "POP",
      "path": "4"
    },
    "1546": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1548": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1549": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1550": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1552": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "NOT",
      "path": "4"
    },
    "1553": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1555": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1556": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "ADD",
      "path": "4"
    },
    "1557": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "AND",
      "path": "4"
    },
    "1558": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1559": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "ADD",
      "path": "4"
    },
    "1560": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1561": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1563": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1564": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "POP",
      "path": "4"
    },
    "1565": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1566": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "ADD",
      "path": "4"
    },
    "1567": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1568": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x629"
    },
    "1571": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1572": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1573": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCE9"
    },
    "1576": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        4410,
        4454
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1577": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4410,
        4454
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1578": {
      "op": "POP"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1585": {
      "op": "SHL"
    },
    "1586": {
      "op": "SUB"
    },
    "1587": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4486
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 11
    },
    "1588": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4486
      ],
      "op": "AND",
      "path": "4"
    },
    "1589": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4501,
        4502
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1591": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4486
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1592": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4486
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1593": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4486
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1594": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4478
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1596": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4486
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1598": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4486
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1599": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4486
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1600": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4486
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1601": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4486
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1603": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4486
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1604": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4486
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1605": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4486
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1606": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4487,
        4497
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1607": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4498
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1608": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4498
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1609": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4498
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1610": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4498
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1611": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4498
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1612": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4498
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1613": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4498
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1614": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4502
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1615": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4502
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1616": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4502
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1617": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4544,
        4561
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 12,
      "value": "0x2"
    },
    "1619": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4544,
        4573
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1620": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4544,
        4573
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1621": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4544,
        4573
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1622": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4544,
        4573
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1623": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4544,
        4573
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1624": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4544,
        4573
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1625": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4544,
        4573
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1626": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4544,
        4577
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x663"
    },
    "1629": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4544,
        4577
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1630": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4464,
        4478
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1631": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4544,
        4577
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD6E"
    },
    "1634": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        4544,
        4577
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1635": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4544,
        4577
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1636": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4530,
        4540
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1637": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4512,
        4541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1639": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4512,
        4541
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1640": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4512,
        4541
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1641": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4512,
        4541
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1642": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4512,
        4529
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1644": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4512,
        4541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1646": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4512,
        4541
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1647": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4512,
        4541
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1649": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4512,
        4541
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1650": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4512,
        4541
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1651": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        4512,
        4577
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1652": {
      "op": "POP"
    },
    "1653": {
      "op": "POP"
    },
    "1654": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "o",
      "offset": [
        4226,
        4584
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1655": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2383,
        2705
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1662": {
      "op": "SHL"
    },
    "1663": {
      "op": "SUB"
    },
    "1664": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2515,
        2539
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1665": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2515,
        2539
      ],
      "op": "AND",
      "path": "4"
    },
    "1666": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2488,
        2495
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1668": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2515,
        2539
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1669": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2515,
        2539
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1670": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2515,
        2539
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1671": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2515,
        2532
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1673": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2515,
        2539
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1675": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2515,
        2539
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1676": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2515,
        2539
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1678": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2515,
        2539
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1679": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2515,
        2539
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1680": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2515,
        2539
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1681": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2511,
        2554
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x69C"
    },
    "1684": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2511,
        2554
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1685": {
      "op": "POP"
    },
    "1686": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2553,
        2554
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 13,
      "value": "0x0"
    },
    "1688": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2546,
        2554
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6F8"
    },
    "1691": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2546,
        2554
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1692": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2511,
        2554
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1693": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2566,
        2579
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1695": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2581,
        2597
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1696": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2601,
        2622
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6A8"
    },
    "1699": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2615,
        2621
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1700": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2601,
        2614
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9D8"
    },
    "1703": {
      "fn": "TokenFarm.getSingleTokenValue",
      "jump": "i",
      "offset": [
        2601,
        2622
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1704": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2601,
        2622
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1705": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2565,
        2622
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1706": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2565,
        2622
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1707": {
      "op": "POP"
    },
    "1708": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2565,
        2622
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1709": {
      "op": "POP"
    },
    "1710": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2684,
        2696
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 14,
      "value": "0x6B8"
    },
    "1713": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2565,
        2622
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1714": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2684,
        2686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "1716": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2684,
        2696
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE69"
    },
    "1719": {
      "fn": "TokenFarm.getSingleTokenValue",
      "jump": "i",
      "offset": [
        2684,
        2696
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1720": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2684,
        2696
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1727": {
      "op": "SHL"
    },
    "1728": {
      "op": "SUB"
    },
    "1729": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2664
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1730": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2664
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1731": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2664
      ],
      "op": "AND",
      "path": "4"
    },
    "1732": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2664
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1734": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2664
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1735": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2664
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1736": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2664
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1737": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2656
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1739": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2664
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1741": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2664
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1742": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2664
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1743": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2664
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1744": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2664
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1746": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2664
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1747": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2664
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1748": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2664
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1749": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2671
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1750": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2671
      ],
      "op": "DUP11",
      "path": "4"
    },
    "1751": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2671
      ],
      "op": "AND",
      "path": "4"
    },
    "1752": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2671
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1753": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2671
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1754": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2671
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1755": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2671
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1756": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2671
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1757": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2671
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1758": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2671
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1759": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2679
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E9"
    },
    "1762": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2679
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1763": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2674,
        2679
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1764": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2674,
        2679
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1765": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2679
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE75"
    },
    "1768": {
      "fn": "TokenFarm.getSingleTokenValue",
      "jump": "i",
      "offset": [
        2642,
        2679
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1769": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2642,
        2679
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1770": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2641,
        2697
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6F3"
    },
    "1773": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2641,
        2697
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1774": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2641,
        2697
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1775": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2641,
        2697
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE94"
    },
    "1778": {
      "fn": "TokenFarm.getSingleTokenValue",
      "jump": "i",
      "offset": [
        2641,
        2697
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1779": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2641,
        2697
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1780": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2633,
        2698
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1781": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2633,
        2698
      ],
      "op": "POP",
      "path": "4"
    },
    "1782": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2633,
        2698
      ],
      "op": "POP",
      "path": "4"
    },
    "1783": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2633,
        2698
      ],
      "op": "POP",
      "path": "4"
    },
    "1784": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2383,
        2705
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1785": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2383,
        2705
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1786": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2383,
        2705
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1787": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2383,
        2705
      ],
      "op": "POP",
      "path": "4"
    },
    "1788": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        2383,
        2705
      ],
      "op": "POP",
      "path": "4"
    },
    "1789": {
      "fn": "TokenFarm.getSingleTokenValue",
      "jump": "o",
      "offset": [
        2383,
        2705
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1790": {
      "offset": [
        701,
        731
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1791": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "1793": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1794": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1795": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1796": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1797": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "LT",
      "path": "4"
    },
    "1798": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x70E"
    },
    "1801": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1802": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1804": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1805": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1806": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1807": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1809": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1810": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1811": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1812": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1814": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1815": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1816": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1817": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "ADD",
      "path": "4"
    },
    "1818": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1825": {
      "op": "SHL"
    },
    "1826": {
      "op": "SUB"
    },
    "1827": {
      "offset": [
        701,
        731
      ],
      "op": "AND",
      "path": "4"
    },
    "1828": {
      "fn": "TokenFarm.getSingleTokenValue",
      "offset": [
        701,
        731
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1829": {
      "op": "POP"
    },
    "1830": {
      "offset": [
        701,
        731
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1831": {
      "fn": "TokenFarm.getSingleTokenValue",
      "jump": "o",
      "offset": [
        701,
        731
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1832": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1277,
        1563
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1833": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1835": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1842": {
      "op": "SHL"
    },
    "1843": {
      "op": "SUB"
    },
    "1844": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1845": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1846": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1847": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x752"
    },
    "1850": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1851": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1853": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1854": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1860": {
      "op": "SHL"
    },
    "1861": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1862": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1863": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1865": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1866": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "1869": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1870": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD39"
    },
    "1873": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1874": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1875": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1332,
        1341
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1877": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1327,
        1557
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1878": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1351,
        1358
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1880": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1351,
        1365
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1881": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1347,
        1365
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1882": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1347,
        1365
      ],
      "op": "LT",
      "path": "4"
    },
    "1883": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1327,
        1557
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1884": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1327,
        1557
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x822"
    },
    "1887": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1327,
        1557
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1888": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1386,
        1403
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1890": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1413
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1892": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1414,
        1415
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1893": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1894": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1895": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1896": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "LT",
      "path": "4"
    },
    "1897": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x774"
    },
    "1900": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1901": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x774"
    },
    "1904": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEB6"
    },
    "1907": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        1406,
        1416
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1908": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1909": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1911": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1912": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1913": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1914": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1916": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1917": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1918": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "ADD",
      "path": "4"
    },
    "1919": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1926": {
      "op": "SHL"
    },
    "1927": {
      "op": "SUB"
    },
    "1928": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "AND",
      "path": "4"
    },
    "1929": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1930": {
      "op": "POP"
    },
    "1931": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1455,
        1483
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x793"
    },
    "1934": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1406,
        1416
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1935": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1455,
        1472
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8B3"
    },
    "1938": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        1455,
        1483
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1939": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1455,
        1483
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1940": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1510
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 15,
      "value": "0x6"
    },
    "1942": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1510
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1943": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1945": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1946": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1953": {
      "op": "SHL"
    },
    "1954": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1955": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1962": {
      "op": "SHL"
    },
    "1963": {
      "op": "SUB"
    },
    "1964": {
      "op": "DUP6"
    },
    "1965": {
      "op": "DUP2"
    },
    "1966": {
      "op": "AND"
    },
    "1967": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1969": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1970": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "ADD",
      "path": "4"
    },
    "1971": {
      "op": "MSTORE"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1974": {
      "op": "DUP3"
    },
    "1975": {
      "op": "ADD"
    },
    "1976": {
      "op": "DUP5"
    },
    "1977": {
      "op": "SWAP1"
    },
    "1978": {
      "op": "MSTORE"
    },
    "1979": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1430,
        1483
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1980": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1430,
        1483
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1981": {
      "op": "POP"
    },
    "1982": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1510
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1983": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1510
      ],
      "op": "AND",
      "path": "4"
    },
    "1984": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1510
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1985": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1519
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "1990": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1519
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1993": {
      "op": "ADD"
    },
    "1994": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1996": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1998": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1999": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2000": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2001": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "SUB",
      "path": "4"
    },
    "2002": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2003": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2005": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2006": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "GAS",
      "path": "4"
    },
    "2007": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "CALL",
      "path": "4"
    },
    "2008": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2009": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2010": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2011": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7E8"
    },
    "2014": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2015": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2016": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2018": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2019": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2020": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2021": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2023": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2024": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2025": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "POP",
      "path": "4"
    },
    "2026": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "POP",
      "path": "4"
    },
    "2027": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "POP",
      "path": "4"
    },
    "2028": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "POP",
      "path": "4"
    },
    "2029": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2031": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2032": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2033": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2035": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "NOT",
      "path": "4"
    },
    "2036": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2038": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2039": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "ADD",
      "path": "4"
    },
    "2040": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "AND",
      "path": "4"
    },
    "2041": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2042": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "ADD",
      "path": "4"
    },
    "2043": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2044": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2046": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2047": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "POP",
      "path": "4"
    },
    "2048": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2049": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "ADD",
      "path": "4"
    },
    "2050": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2051": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x80C"
    },
    "2054": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2055": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2056": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCE9"
    },
    "2059": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        1497,
        1546
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2060": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2061": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1497,
        1546
      ],
      "op": "POP",
      "path": "4"
    },
    "2062": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1372,
        1557
      ],
      "op": "POP",
      "path": "4"
    },
    "2063": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1372,
        1557
      ],
      "op": "POP",
      "path": "4"
    },
    "2064": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1367,
        1370
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 16
    },
    "2065": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1367,
        1370
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2066": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1367,
        1370
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x81A"
    },
    "2069": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1367,
        1370
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2070": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1367,
        1370
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xECC"
    },
    "2073": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        1367,
        1370
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2074": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1367,
        1370
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2075": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1367,
        1370
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2076": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1367,
        1370
      ],
      "op": "POP",
      "path": "4"
    },
    "2077": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1367,
        1370
      ],
      "op": "POP",
      "path": "4"
    },
    "2078": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1327,
        1557
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x755"
    },
    "2081": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1327,
        1557
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2082": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1327,
        1557
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2083": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        1327,
        1557
      ],
      "op": "POP",
      "path": "4"
    },
    "2084": {
      "fn": "TokenFarm.issueTokens",
      "jump": "o",
      "offset": [
        1277,
        1563
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2085": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2086": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2088": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2095": {
      "op": "SHL"
    },
    "2096": {
      "op": "SUB"
    },
    "2097": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2098": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2099": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2100": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84F"
    },
    "2103": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2104": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2106": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2107": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2113": {
      "op": "SHL"
    },
    "2114": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2115": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2116": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2118": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2119": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "2122": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2123": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD39"
    },
    "2126": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2127": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2128": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0x859"
    },
    "2131": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2133": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBEC"
    },
    "2136": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2137": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2138": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2139": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        993,
        1155
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2140": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2142": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2149": {
      "op": "SHL"
    },
    "2150": {
      "op": "SUB"
    },
    "2151": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2152": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2153": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2154": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x885"
    },
    "2157": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2158": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2160": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2161": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2167": {
      "op": "SHL"
    },
    "2168": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2169": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2170": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2172": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2173": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "2176": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2177": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD39"
    },
    "2180": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2181": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2188": {
      "op": "SHL"
    },
    "2189": {
      "op": "SUB"
    },
    "2190": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1135
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 18
    },
    "2191": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1135
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2192": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1135
      ],
      "op": "AND",
      "path": "4"
    },
    "2193": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1135
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2195": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1135
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2196": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1135
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2197": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1135
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2198": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1127
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2200": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1135
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2202": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1135
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2203": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1135
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2205": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1135
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2206": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1135
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2207": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1148
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2208": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1148
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2215": {
      "op": "SHL"
    },
    "2216": {
      "op": "SUB"
    },
    "2217": {
      "op": "NOT"
    },
    "2218": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1148
      ],
      "op": "AND",
      "path": "4"
    },
    "2219": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1148
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2220": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1148
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2221": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1148
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2222": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1148
      ],
      "op": "AND",
      "path": "4"
    },
    "2223": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1148
      ],
      "op": "OR",
      "path": "4"
    },
    "2224": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1148
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2225": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        1106,
        1148
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2226": {
      "fn": "TokenFarm.setPriceFeedContract",
      "jump": "o",
      "offset": [
        993,
        1155
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2227": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1704,
        2097
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2234": {
      "op": "SHL"
    },
    "2235": {
      "op": "SUB"
    },
    "2236": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1794,
        1818
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 19
    },
    "2237": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1794,
        1818
      ],
      "op": "AND",
      "path": "4"
    },
    "2238": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1767,
        1774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2240": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1794,
        1818
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2241": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1794,
        1818
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2242": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1794,
        1818
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2243": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1794,
        1811
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2245": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1794,
        1818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2247": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1794,
        1818
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2248": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1794,
        1818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2250": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1794,
        1818
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2251": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1794,
        1818
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2252": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1794,
        1818
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2253": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1786,
        1842
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x90A"
    },
    "2256": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1786,
        1842
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2257": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1786,
        1842
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2259": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1786,
        1842
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2260": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2266": {
      "op": "SHL"
    },
    "2267": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1786,
        1842
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2268": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1786,
        1842
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2271": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1786,
        1842
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2273": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1786,
        1842
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2274": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1786,
        1842
      ],
      "op": "ADD",
      "path": "4"
    },
    "2275": {
      "op": "MSTORE"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2280": {
      "op": "DUP3"
    },
    "2281": {
      "op": "ADD"
    },
    "2282": {
      "op": "MSTORE"
    },
    "2283": {
      "op": "PUSH15",
      "value": "0x139BC81D1BDAD95B881CDD185AD959"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "2301": {
      "op": "SHL"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2304": {
      "op": "DUP3"
    },
    "2305": {
      "op": "ADD"
    },
    "2306": {
      "op": "MSTORE"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2309": {
      "op": "ADD"
    },
    "2310": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1786,
        1842
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x332"
    },
    "2313": {
      "op": "JUMP"
    },
    "2314": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1786,
        1842
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2315": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1853,
        1871
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2317": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1890,
        1899
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2318": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1885,
        2063
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2319": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1909,
        1922
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "2321": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1909,
        1929
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2322": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1905,
        1929
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2323": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1905,
        1929
      ],
      "op": "LT",
      "path": "4"
    },
    "2324": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1885,
        2063
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2325": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1885,
        2063
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x967"
    },
    "2328": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1885,
        2063
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2329": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2008,
        2052
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 20,
      "value": "0x949"
    },
    "2332": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2028,
        2033
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2333": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2048
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "2335": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2049,
        2050
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2336": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2337": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2338": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2339": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "LT",
      "path": "4"
    },
    "2340": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x92F"
    },
    "2343": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2344": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x92F"
    },
    "2347": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEB6"
    },
    "2350": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        2035,
        2051
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2351": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2352": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2354": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2355": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2356": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2357": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2359": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2360": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2361": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2362": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "ADD",
      "path": "4"
    },
    "2363": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2370": {
      "op": "SHL"
    },
    "2371": {
      "op": "SUB"
    },
    "2372": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2035,
        2051
      ],
      "op": "AND",
      "path": "4"
    },
    "2373": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2008,
        2027
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x677"
    },
    "2376": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        2008,
        2052
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2377": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2008,
        2052
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2378": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1979,
        2052
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x953"
    },
    "2381": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1979,
        2052
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2382": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1979,
        1989
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2383": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1979,
        2052
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD21"
    },
    "2386": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        1979,
        2052
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2387": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1979,
        2052
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2388": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1950,
        2052
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2389": {
      "op": "POP"
    },
    "2390": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1931,
        1934
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 21
    },
    "2391": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1931,
        1934
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x95F"
    },
    "2394": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1931,
        1934
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2395": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1931,
        1934
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xECC"
    },
    "2398": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        1931,
        1934
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2399": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1931,
        1934
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2400": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1931,
        1934
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2401": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1931,
        1934
      ],
      "op": "POP",
      "path": "4"
    },
    "2402": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1931,
        1934
      ],
      "op": "POP",
      "path": "4"
    },
    "2403": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1885,
        2063
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x90E"
    },
    "2406": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1885,
        2063
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2407": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1885,
        2063
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2408": {
      "op": "POP"
    },
    "2409": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        2080,
        2090
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 22
    },
    "2410": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        1704,
        2097
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2411": {
      "op": "POP"
    },
    "2412": {
      "op": "POP"
    },
    "2413": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "o",
      "offset": [
        1704,
        2097
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2414": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5310,
        5535
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2415": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5371,
        5375
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2417": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5371,
        5375
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2418": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5387,
        5506
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2419": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5411,
        5424
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "2421": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5411,
        5431
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2422": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5407,
        5431
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2423": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5407,
        5431
      ],
      "op": "LT",
      "path": "4"
    },
    "2424": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5387,
        5506
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2425": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5387,
        5506
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9CF"
    },
    "2428": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5387,
        5506
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2429": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5476,
        5482
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2436": {
      "op": "SHL"
    },
    "2437": {
      "op": "SUB"
    },
    "2438": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5482
      ],
      "op": "AND",
      "path": "4"
    },
    "2439": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "2441": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5470,
        5471
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2442": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2443": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2444": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2445": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "LT",
      "path": "4"
    },
    "2446": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x999"
    },
    "2449": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2450": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x999"
    },
    "2453": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEB6"
    },
    "2456": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        5456,
        5472
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2457": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2458": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2460": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2461": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2462": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2463": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2465": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2466": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2467": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2468": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "ADD",
      "path": "4"
    },
    "2469": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2476": {
      "op": "SHL"
    },
    "2477": {
      "op": "SUB"
    },
    "2478": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5472
      ],
      "op": "AND",
      "path": "4"
    },
    "2479": {
      "branch": 36,
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5456,
        5482
      ],
      "op": "EQ",
      "path": "4"
    },
    "2480": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5452,
        5495
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2481": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5452,
        5495
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9BD"
    },
    "2484": {
      "branch": 36,
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5452,
        5495
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2485": {
      "op": "POP"
    },
    "2486": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5491,
        5495
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 23,
      "value": "0x1"
    },
    "2488": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5491,
        5495
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2489": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5310,
        5535
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2490": {
      "op": "POP"
    },
    "2491": {
      "op": "POP"
    },
    "2492": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "o",
      "offset": [
        5310,
        5535
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2493": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5452,
        5495
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2494": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5433,
        5436
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 24
    },
    "2495": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5433,
        5436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9C7"
    },
    "2498": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5433,
        5436
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2499": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5433,
        5436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xECC"
    },
    "2502": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        5433,
        5436
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2503": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5433,
        5436
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2504": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5433,
        5436
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2505": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5433,
        5436
      ],
      "op": "POP",
      "path": "4"
    },
    "2506": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5433,
        5436
      ],
      "op": "POP",
      "path": "4"
    },
    "2507": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5387,
        5506
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x972"
    },
    "2510": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5387,
        5506
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2511": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5387,
        5506
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2512": {
      "op": "POP"
    },
    "2513": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5523,
        5528
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 25,
      "value": "0x0"
    },
    "2515": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5523,
        5528
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2516": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        5310,
        5535
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2517": {
      "op": "POP"
    },
    "2518": {
      "op": "POP"
    },
    "2519": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "o",
      "offset": [
        5310,
        5535
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2520": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2882,
        3330
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2527": {
      "op": "SHL"
    },
    "2528": {
      "op": "SUB"
    },
    "2529": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2530": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2531": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "AND",
      "path": "4"
    },
    "2532": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2966,
        2973
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2534": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2535": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2536": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2537": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3046
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2539": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2541": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2542": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2544": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2545": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2546": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2547": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2548": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2549": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2550": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2557": {
      "op": "SHL"
    },
    "2558": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2559": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2560": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2561": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2562": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2966,
        2973
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2563": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2966,
        2973
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2564": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2966,
        2973
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2565": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2966,
        2973
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2566": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2567": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "AND",
      "path": "4"
    },
    "2568": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2569": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2570": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2571": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2966,
        2973
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2572": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        2966,
        2973
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2573": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2574": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2575": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3219
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFEAF968C"
    },
    "2580": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3219
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2581": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2583": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2584": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2585": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "ADD",
      "path": "4"
    },
    "2586": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2587": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "2589": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2590": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2591": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2592": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2593": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2594": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2595": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "SUB",
      "path": "4"
    },
    "2596": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "ADD",
      "path": "4"
    },
    "2597": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2598": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3025,
        3054
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2599": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "GAS",
      "path": "4"
    },
    "2600": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "2601": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2602": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2603": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2604": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA39"
    },
    "2607": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2608": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2609": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2611": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2612": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2613": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2614": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2616": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2617": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2618": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "POP",
      "path": "4"
    },
    "2619": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "POP",
      "path": "4"
    },
    "2620": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "POP",
      "path": "4"
    },
    "2621": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "POP",
      "path": "4"
    },
    "2622": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2624": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2625": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2626": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2628": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "NOT",
      "path": "4"
    },
    "2629": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2631": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2632": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "ADD",
      "path": "4"
    },
    "2633": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "AND",
      "path": "4"
    },
    "2634": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2635": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "ADD",
      "path": "4"
    },
    "2636": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2637": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2639": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2640": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "POP",
      "path": "4"
    },
    "2641": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2642": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "ADD",
      "path": "4"
    },
    "2643": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2644": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA5D"
    },
    "2647": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2648": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2649": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF01"
    },
    "2652": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "i",
      "offset": [
        3194,
        3221
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2653": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3194,
        3221
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2654": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3169,
        3221
      ],
      "op": "POP",
      "path": "4"
    },
    "2655": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3169,
        3221
      ],
      "op": "POP",
      "path": "4"
    },
    "2656": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3169,
        3221
      ],
      "op": "POP",
      "path": "4"
    },
    "2657": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3169,
        3221
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2658": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3169,
        3221
      ],
      "op": "POP",
      "path": "4"
    },
    "2659": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3169,
        3221
      ],
      "op": "POP",
      "path": "4"
    },
    "2660": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3231,
        3247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2662": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3267
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2669": {
      "op": "SHL"
    },
    "2670": {
      "op": "SUB"
    },
    "2671": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3276
      ],
      "op": "AND",
      "path": "4"
    },
    "2672": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3276
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x313CE567"
    },
    "2677": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2679": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2680": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2681": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "2686": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "AND",
      "path": "4"
    },
    "2687": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "2689": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "SHL",
      "path": "4"
    },
    "2690": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2691": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2692": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2694": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "ADD",
      "path": "4"
    },
    "2695": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2697": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2699": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2700": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2701": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2702": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "SUB",
      "path": "4"
    },
    "2703": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2704": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2705": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "GAS",
      "path": "4"
    },
    "2706": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "2707": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2708": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2709": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2710": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAA3"
    },
    "2713": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2714": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2715": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2717": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2718": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2719": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2720": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2722": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2723": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2724": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "POP",
      "path": "4"
    },
    "2725": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "POP",
      "path": "4"
    },
    "2726": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "POP",
      "path": "4"
    },
    "2727": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "POP",
      "path": "4"
    },
    "2728": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2730": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2731": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2732": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2734": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "NOT",
      "path": "4"
    },
    "2735": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2737": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2738": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "ADD",
      "path": "4"
    },
    "2739": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "AND",
      "path": "4"
    },
    "2740": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2741": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "ADD",
      "path": "4"
    },
    "2742": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2743": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2745": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2746": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "POP",
      "path": "4"
    },
    "2747": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2748": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "ADD",
      "path": "4"
    },
    "2749": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2750": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAC7"
    },
    "2753": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2754": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2755": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF51"
    },
    "2758": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "i",
      "offset": [
        3258,
        3278
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2759": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3258,
        3278
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2760": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3306,
        3311
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 26
    },
    "2761": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3306,
        3311
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "2762": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3250,
        3279
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "2764": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3250,
        3279
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2765": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3250,
        3279
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2766": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3250,
        3279
      ],
      "op": "AND",
      "path": "4"
    },
    "2767": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3250,
        3279
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "2768": {
      "op": "POP"
    },
    "2769": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3306,
        3311
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2770": {
      "fn": "TokenFarm.getTokenValue",
      "offset": [
        3306,
        3311
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2771": {
      "op": "POP"
    },
    "2772": {
      "op": "POP"
    },
    "2773": {
      "op": "POP"
    },
    "2774": {
      "op": "POP"
    },
    "2775": {
      "op": "POP"
    },
    "2776": {
      "fn": "TokenFarm.getTokenValue",
      "jump": "o",
      "offset": [
        2882,
        3330
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2777": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2778": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2780": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2787": {
      "op": "SHL"
    },
    "2788": {
      "op": "SUB"
    },
    "2789": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2790": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2791": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2792": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB03"
    },
    "2795": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2796": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2798": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2799": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2803": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2805": {
      "op": "SHL"
    },
    "2806": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2807": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2808": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2810": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2811": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "2814": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2815": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD39"
    },
    "2818": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2819": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2826": {
      "op": "SHL"
    },
    "2827": {
      "op": "SUB"
    },
    "2828": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 27
    },
    "2829": {
      "branch": 37,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "2830": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB68"
    },
    "2833": {
      "branch": 37,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2834": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2836": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2837": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2843": {
      "op": "SHL"
    },
    "2844": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2845": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2848": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2850": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2851": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "2852": {
      "op": "MSTORE"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2857": {
      "op": "DUP3"
    },
    "2858": {
      "op": "ADD"
    },
    "2859": {
      "op": "MSTORE"
    },
    "2860": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2895": {
      "op": "DUP3"
    },
    "2896": {
      "op": "ADD"
    },
    "2897": {
      "op": "MSTORE"
    },
    "2898": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2907": {
      "op": "SHL"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2910": {
      "op": "DUP3"
    },
    "2911": {
      "op": "ADD"
    },
    "2912": {
      "op": "MSTORE"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2915": {
      "op": "ADD"
    },
    "2916": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x332"
    },
    "2919": {
      "op": "JUMP"
    },
    "2920": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2921": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 28,
      "value": "0x822"
    },
    "2924": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2925": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBEC"
    },
    "2928": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2929": {
      "offset": [
        671,
        695
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2930": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        671,
        695
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2932": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        671,
        695
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2933": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        671,
        695
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2934": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        671,
        695
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2935": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        671,
        695
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2936": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        671,
        695
      ],
      "op": "LT",
      "path": "4"
    },
    "2937": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        671,
        695
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x70E"
    },
    "2940": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        671,
        695
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2941": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        671,
        695
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2943": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        671,
        695
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2944": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        671,
        695
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2945": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4729,
        4938
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2952": {
      "op": "SHL"
    },
    "2953": {
      "op": "SUB"
    },
    "2954": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4838
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2955": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4838
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2956": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4838
      ],
      "op": "AND",
      "path": "4"
    },
    "2957": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4849,
        4850
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2959": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4838
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2960": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4838
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2961": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4838
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2962": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4830
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2964": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4838
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2966": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4838
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2967": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4838
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2968": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4838
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2969": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4838
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2971": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4838
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2972": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4838
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2973": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4838
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2974": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4845
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2975": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4845
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2976": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4845
      ],
      "op": "AND",
      "path": "4"
    },
    "2977": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4845
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2978": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4845
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2979": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4845
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2980": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4845
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2981": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4845
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2982": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4845
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2983": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4816,
        4845
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2984": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4812,
        4932
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4C7"
    },
    "2987": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4812,
        4932
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2994": {
      "op": "SHL"
    },
    "2995": {
      "op": "SUB"
    },
    "2996": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4893,
        4917
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 29
    },
    "2997": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4893,
        4917
      ],
      "op": "AND",
      "path": "4"
    },
    "2998": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4893,
        4917
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3000": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4893,
        4917
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3001": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4893,
        4917
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3002": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4893,
        4917
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3003": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4893,
        4910
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "3005": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4893,
        4917
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3007": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4893,
        4917
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3008": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4893,
        4917
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3010": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4893,
        4917
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3011": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4893,
        4917
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3012": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4893,
        4917
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3013": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4893,
        4921
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBCF"
    },
    "3016": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4893,
        4921
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3017": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4920,
        4921
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3019": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4893,
        4921
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD21"
    },
    "3022": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "jump": "i",
      "offset": [
        4893,
        4921
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3023": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4893,
        4921
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3030": {
      "op": "SHL"
    },
    "3031": {
      "op": "SUB"
    },
    "3032": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4866,
        4890
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3033": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4866,
        4890
      ],
      "op": "AND",
      "path": "4"
    },
    "3034": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4866,
        4890
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3036": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4866,
        4890
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3037": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4866,
        4890
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3038": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4866,
        4890
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3039": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4866,
        4883
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "3041": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4866,
        4890
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3043": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4866,
        4890
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3044": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4866,
        4890
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3046": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4866,
        4890
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3047": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4866,
        4890
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3048": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4866,
        4921
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3049": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4729,
        4938
      ],
      "op": "POP",
      "path": "4"
    },
    "3050": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "offset": [
        4729,
        4938
      ],
      "op": "POP",
      "path": "4"
    },
    "3051": {
      "fn": "TokenFarm.updateUniqueTokenStaked",
      "jump": "o",
      "offset": [
        4729,
        4938
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3052": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3053": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3055": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3056": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3063": {
      "op": "SHL"
    },
    "3064": {
      "op": "SUB"
    },
    "3065": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 30
    },
    "3066": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3067": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3074": {
      "op": "SHL"
    },
    "3075": {
      "op": "SUB"
    },
    "3076": {
      "op": "NOT"
    },
    "3077": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3078": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "3079": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3080": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "3081": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3082": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3083": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x40"
    },
    "3085": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3086": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3087": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3088": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3089": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "3090": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3091": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3092": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3093": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3126": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3127": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3128": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3129": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "3130": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "3131": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3132": {
      "op": "JUMPDEST"
    },
    "3133": {
      "op": "DUP1"
    },
    "3134": {
      "op": "CALLDATALOAD"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3141": {
      "op": "SHL"
    },
    "3142": {
      "op": "SUB"
    },
    "3143": {
      "op": "DUP2"
    },
    "3144": {
      "op": "AND"
    },
    "3145": {
      "op": "DUP2"
    },
    "3146": {
      "op": "EQ"
    },
    "3147": {
      "op": "PUSH2",
      "value": "0xC53"
    },
    "3150": {
      "op": "JUMPI"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3153": {
      "op": "DUP1"
    },
    "3154": {
      "op": "REVERT"
    },
    "3155": {
      "op": "JUMPDEST"
    },
    "3156": {
      "op": "SWAP2"
    },
    "3157": {
      "op": "SWAP1"
    },
    "3158": {
      "op": "POP"
    },
    "3159": {
      "jump": "o",
      "op": "JUMP"
    },
    "3160": {
      "op": "JUMPDEST"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3163": {
      "op": "DUP1"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3166": {
      "op": "DUP4"
    },
    "3167": {
      "op": "DUP6"
    },
    "3168": {
      "op": "SUB"
    },
    "3169": {
      "op": "SLT"
    },
    "3170": {
      "op": "ISZERO"
    },
    "3171": {
      "op": "PUSH2",
      "value": "0xC6B"
    },
    "3174": {
      "op": "JUMPI"
    },
    "3175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3177": {
      "op": "DUP1"
    },
    "3178": {
      "op": "REVERT"
    },
    "3179": {
      "op": "JUMPDEST"
    },
    "3180": {
      "op": "DUP3"
    },
    "3181": {
      "op": "CALLDATALOAD"
    },
    "3182": {
      "op": "SWAP2"
    },
    "3183": {
      "op": "POP"
    },
    "3184": {
      "op": "PUSH2",
      "value": "0xC7B"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3189": {
      "op": "DUP5"
    },
    "3190": {
      "op": "ADD"
    },
    "3191": {
      "op": "PUSH2",
      "value": "0xC3C"
    },
    "3194": {
      "jump": "i",
      "op": "JUMP"
    },
    "3195": {
      "op": "JUMPDEST"
    },
    "3196": {
      "op": "SWAP1"
    },
    "3197": {
      "op": "POP"
    },
    "3198": {
      "op": "SWAP3"
    },
    "3199": {
      "op": "POP"
    },
    "3200": {
      "op": "SWAP3"
    },
    "3201": {
      "op": "SWAP1"
    },
    "3202": {
      "op": "POP"
    },
    "3203": {
      "jump": "o",
      "op": "JUMP"
    },
    "3204": {
      "op": "JUMPDEST"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3209": {
      "op": "DUP3"
    },
    "3210": {
      "op": "DUP5"
    },
    "3211": {
      "op": "SUB"
    },
    "3212": {
      "op": "SLT"
    },
    "3213": {
      "op": "ISZERO"
    },
    "3214": {
      "op": "PUSH2",
      "value": "0xC96"
    },
    "3217": {
      "op": "JUMPI"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3220": {
      "op": "DUP1"
    },
    "3221": {
      "op": "REVERT"
    },
    "3222": {
      "op": "JUMPDEST"
    },
    "3223": {
      "op": "PUSH2",
      "value": "0xC9F"
    },
    "3226": {
      "op": "DUP3"
    },
    "3227": {
      "op": "PUSH2",
      "value": "0xC3C"
    },
    "3230": {
      "jump": "i",
      "op": "JUMP"
    },
    "3231": {
      "op": "JUMPDEST"
    },
    "3232": {
      "op": "SWAP4"
    },
    "3233": {
      "op": "SWAP3"
    },
    "3234": {
      "op": "POP"
    },
    "3235": {
      "op": "POP"
    },
    "3236": {
      "op": "POP"
    },
    "3237": {
      "jump": "o",
      "op": "JUMP"
    },
    "3238": {
      "op": "JUMPDEST"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3241": {
      "op": "DUP1"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3244": {
      "op": "DUP4"
    },
    "3245": {
      "op": "DUP6"
    },
    "3246": {
      "op": "SUB"
    },
    "3247": {
      "op": "SLT"
    },
    "3248": {
      "op": "ISZERO"
    },
    "3249": {
      "op": "PUSH2",
      "value": "0xCB9"
    },
    "3252": {
      "op": "JUMPI"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3255": {
      "op": "DUP1"
    },
    "3256": {
      "op": "REVERT"
    },
    "3257": {
      "op": "JUMPDEST"
    },
    "3258": {
      "op": "PUSH2",
      "value": "0xCC2"
    },
    "3261": {
      "op": "DUP4"
    },
    "3262": {
      "op": "PUSH2",
      "value": "0xC3C"
    },
    "3265": {
      "jump": "i",
      "op": "JUMP"
    },
    "3266": {
      "op": "JUMPDEST"
    },
    "3267": {
      "op": "SWAP2"
    },
    "3268": {
      "op": "POP"
    },
    "3269": {
      "op": "PUSH2",
      "value": "0xC7B"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3274": {
      "op": "DUP5"
    },
    "3275": {
      "op": "ADD"
    },
    "3276": {
      "op": "PUSH2",
      "value": "0xC3C"
    },
    "3279": {
      "jump": "i",
      "op": "JUMP"
    },
    "3280": {
      "op": "JUMPDEST"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3285": {
      "op": "DUP3"
    },
    "3286": {
      "op": "DUP5"
    },
    "3287": {
      "op": "SUB"
    },
    "3288": {
      "op": "SLT"
    },
    "3289": {
      "op": "ISZERO"
    },
    "3290": {
      "op": "PUSH2",
      "value": "0xCE2"
    },
    "3293": {
      "op": "JUMPI"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3296": {
      "op": "DUP1"
    },
    "3297": {
      "op": "REVERT"
    },
    "3298": {
      "op": "JUMPDEST"
    },
    "3299": {
      "op": "POP"
    },
    "3300": {
      "op": "CALLDATALOAD"
    },
    "3301": {
      "op": "SWAP2"
    },
    "3302": {
      "op": "SWAP1"
    },
    "3303": {
      "op": "POP"
    },
    "3304": {
      "jump": "o",
      "op": "JUMP"
    },
    "3305": {
      "op": "JUMPDEST"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3310": {
      "op": "DUP3"
    },
    "3311": {
      "op": "DUP5"
    },
    "3312": {
      "op": "SUB"
    },
    "3313": {
      "op": "SLT"
    },
    "3314": {
      "op": "ISZERO"
    },
    "3315": {
      "op": "PUSH2",
      "value": "0xCFB"
    },
    "3318": {
      "op": "JUMPI"
    },
    "3319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3321": {
      "op": "DUP1"
    },
    "3322": {
      "op": "REVERT"
    },
    "3323": {
      "op": "JUMPDEST"
    },
    "3324": {
      "op": "DUP2"
    },
    "3325": {
      "op": "MLOAD"
    },
    "3326": {
      "op": "DUP1"
    },
    "3327": {
      "op": "ISZERO"
    },
    "3328": {
      "op": "ISZERO"
    },
    "3329": {
      "op": "DUP2"
    },
    "3330": {
      "op": "EQ"
    },
    "3331": {
      "op": "PUSH2",
      "value": "0xC9F"
    },
    "3334": {
      "op": "JUMPI"
    },
    "3335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3337": {
      "op": "DUP1"
    },
    "3338": {
      "op": "REVERT"
    },
    "3339": {
      "op": "JUMPDEST"
    },
    "3340": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3347": {
      "op": "SHL"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3350": {
      "op": "MSTORE"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3355": {
      "op": "MSTORE"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3360": {
      "op": "REVERT"
    },
    "3361": {
      "op": "JUMPDEST"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3364": {
      "op": "DUP3"
    },
    "3365": {
      "op": "NOT"
    },
    "3366": {
      "op": "DUP3"
    },
    "3367": {
      "op": "GT"
    },
    "3368": {
      "op": "ISZERO"
    },
    "3369": {
      "op": "PUSH2",
      "value": "0xD34"
    },
    "3372": {
      "op": "JUMPI"
    },
    "3373": {
      "op": "PUSH2",
      "value": "0xD34"
    },
    "3376": {
      "op": "PUSH2",
      "value": "0xD0B"
    },
    "3379": {
      "jump": "i",
      "op": "JUMP"
    },
    "3380": {
      "op": "JUMPDEST"
    },
    "3381": {
      "op": "POP"
    },
    "3382": {
      "op": "ADD"
    },
    "3383": {
      "op": "SWAP1"
    },
    "3384": {
      "jump": "o",
      "op": "JUMP"
    },
    "3385": {
      "op": "JUMPDEST"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3388": {
      "op": "DUP1"
    },
    "3389": {
      "op": "DUP3"
    },
    "3390": {
      "op": "MSTORE"
    },
    "3391": {
      "op": "DUP2"
    },
    "3392": {
      "op": "DUP2"
    },
    "3393": {
      "op": "ADD"
    },
    "3394": {
      "op": "MSTORE"
    },
    "3395": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3430": {
      "op": "DUP3"
    },
    "3431": {
      "op": "ADD"
    },
    "3432": {
      "op": "MSTORE"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3435": {
      "op": "ADD"
    },
    "3436": {
      "op": "SWAP1"
    },
    "3437": {
      "jump": "o",
      "op": "JUMP"
    },
    "3438": {
      "op": "JUMPDEST"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3441": {
      "op": "DUP3"
    },
    "3442": {
      "op": "DUP3"
    },
    "3443": {
      "op": "LT"
    },
    "3444": {
      "op": "ISZERO"
    },
    "3445": {
      "op": "PUSH2",
      "value": "0xD80"
    },
    "3448": {
      "op": "JUMPI"
    },
    "3449": {
      "op": "PUSH2",
      "value": "0xD80"
    },
    "3452": {
      "op": "PUSH2",
      "value": "0xD0B"
    },
    "3455": {
      "jump": "i",
      "op": "JUMP"
    },
    "3456": {
      "op": "JUMPDEST"
    },
    "3457": {
      "op": "POP"
    },
    "3458": {
      "op": "SUB"
    },
    "3459": {
      "op": "SWAP1"
    },
    "3460": {
      "jump": "o",
      "op": "JUMP"
    },
    "3461": {
      "op": "JUMPDEST"
    },
    "3462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3464": {
      "op": "DUP2"
    },
    "3465": {
      "op": "DUP2"
    },
    "3466": {
      "op": "JUMPDEST"
    },
    "3467": {
      "op": "DUP1"
    },
    "3468": {
      "op": "DUP6"
    },
    "3469": {
      "op": "GT"
    },
    "3470": {
      "op": "ISZERO"
    },
    "3471": {
      "op": "PUSH2",
      "value": "0xDC0"
    },
    "3474": {
      "op": "JUMPI"
    },
    "3475": {
      "op": "DUP2"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3478": {
      "op": "NOT"
    },
    "3479": {
      "op": "DIV"
    },
    "3480": {
      "op": "DUP3"
    },
    "3481": {
      "op": "GT"
    },
    "3482": {
      "op": "ISZERO"
    },
    "3483": {
      "op": "PUSH2",
      "value": "0xDA6"
    },
    "3486": {
      "op": "JUMPI"
    },
    "3487": {
      "op": "PUSH2",
      "value": "0xDA6"
    },
    "3490": {
      "op": "PUSH2",
      "value": "0xD0B"
    },
    "3493": {
      "jump": "i",
      "op": "JUMP"
    },
    "3494": {
      "op": "JUMPDEST"
    },
    "3495": {
      "op": "DUP1"
    },
    "3496": {
      "op": "DUP6"
    },
    "3497": {
      "op": "AND"
    },
    "3498": {
      "op": "ISZERO"
    },
    "3499": {
      "op": "PUSH2",
      "value": "0xDB3"
    },
    "3502": {
      "op": "JUMPI"
    },
    "3503": {
      "op": "SWAP2"
    },
    "3504": {
      "op": "DUP2"
    },
    "3505": {
      "op": "MUL"
    },
    "3506": {
      "op": "SWAP2"
    },
    "3507": {
      "op": "JUMPDEST"
    },
    "3508": {
      "op": "SWAP4"
    },
    "3509": {
      "op": "DUP5"
    },
    "3510": {
      "op": "SHR"
    },
    "3511": {
      "op": "SWAP4"
    },
    "3512": {
      "op": "SWAP1"
    },
    "3513": {
      "op": "DUP1"
    },
    "3514": {
      "op": "MUL"
    },
    "3515": {
      "op": "SWAP1"
    },
    "3516": {
      "op": "PUSH2",
      "value": "0xD8A"
    },
    "3519": {
      "op": "JUMP"
    },
    "3520": {
      "op": "JUMPDEST"
    },
    "3521": {
      "op": "POP"
    },
    "3522": {
      "op": "SWAP3"
    },
    "3523": {
      "op": "POP"
    },
    "3524": {
      "op": "SWAP3"
    },
    "3525": {
      "op": "SWAP1"
    },
    "3526": {
      "op": "POP"
    },
    "3527": {
      "jump": "o",
      "op": "JUMP"
    },
    "3528": {
      "op": "JUMPDEST"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3531": {
      "op": "DUP3"
    },
    "3532": {
      "op": "PUSH2",
      "value": "0xDD7"
    },
    "3535": {
      "op": "JUMPI"
    },
    "3536": {
      "op": "POP"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3539": {
      "op": "PUSH2",
      "value": "0x6F8"
    },
    "3542": {
      "op": "JUMP"
    },
    "3543": {
      "op": "JUMPDEST"
    },
    "3544": {
      "op": "DUP2"
    },
    "3545": {
      "op": "PUSH2",
      "value": "0xDE4"
    },
    "3548": {
      "op": "JUMPI"
    },
    "3549": {
      "op": "POP"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3552": {
      "op": "PUSH2",
      "value": "0x6F8"
    },
    "3555": {
      "op": "JUMP"
    },
    "3556": {
      "op": "JUMPDEST"
    },
    "3557": {
      "op": "DUP2"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3560": {
      "op": "DUP2"
    },
    "3561": {
      "op": "EQ"
    },
    "3562": {
      "op": "PUSH2",
      "value": "0xDFA"
    },
    "3565": {
      "op": "JUMPI"
    },
    "3566": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3568": {
      "op": "DUP2"
    },
    "3569": {
      "op": "EQ"
    },
    "3570": {
      "op": "PUSH2",
      "value": "0xE04"
    },
    "3573": {
      "op": "JUMPI"
    },
    "3574": {
      "op": "PUSH2",
      "value": "0xE20"
    },
    "3577": {
      "op": "JUMP"
    },
    "3578": {
      "op": "JUMPDEST"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3581": {
      "op": "SWAP2"
    },
    "3582": {
      "op": "POP"
    },
    "3583": {
      "op": "POP"
    },
    "3584": {
      "op": "PUSH2",
      "value": "0x6F8"
    },
    "3587": {
      "op": "JUMP"
    },
    "3588": {
      "op": "JUMPDEST"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3591": {
      "op": "DUP5"
    },
    "3592": {
      "op": "GT"
    },
    "3593": {
      "op": "ISZERO"
    },
    "3594": {
      "op": "PUSH2",
      "value": "0xE15"
    },
    "3597": {
      "op": "JUMPI"
    },
    "3598": {
      "op": "PUSH2",
      "value": "0xE15"
    },
    "3601": {
      "op": "PUSH2",
      "value": "0xD0B"
    },
    "3604": {
      "jump": "i",
      "op": "JUMP"
    },
    "3605": {
      "op": "JUMPDEST"
    },
    "3606": {
      "op": "POP"
    },
    "3607": {
      "op": "POP"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3610": {
      "op": "DUP3"
    },
    "3611": {
      "op": "SHL"
    },
    "3612": {
      "op": "PUSH2",
      "value": "0x6F8"
    },
    "3615": {
      "op": "JUMP"
    },
    "3616": {
      "op": "JUMPDEST"
    },
    "3617": {
      "op": "POP"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3620": {
      "op": "DUP4"
    },
    "3621": {
      "op": "LT"
    },
    "3622": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "3625": {
      "op": "DUP4"
    },
    "3626": {
      "op": "LT"
    },
    "3627": {
      "op": "AND"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "3630": {
      "op": "DUP5"
    },
    "3631": {
      "op": "LT"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "3634": {
      "op": "DUP5"
    },
    "3635": {
      "op": "LT"
    },
    "3636": {
      "op": "AND"
    },
    "3637": {
      "op": "OR"
    },
    "3638": {
      "op": "ISZERO"
    },
    "3639": {
      "op": "PUSH2",
      "value": "0xE43"
    },
    "3642": {
      "op": "JUMPI"
    },
    "3643": {
      "op": "POP"
    },
    "3644": {
      "op": "DUP2"
    },
    "3645": {
      "op": "DUP2"
    },
    "3646": {
      "op": "EXP"
    },
    "3647": {
      "op": "PUSH2",
      "value": "0x6F8"
    },
    "3650": {
      "op": "JUMP"
    },
    "3651": {
      "op": "JUMPDEST"
    },
    "3652": {
      "op": "PUSH2",
      "value": "0xE4D"
    },
    "3655": {
      "op": "DUP4"
    },
    "3656": {
      "op": "DUP4"
    },
    "3657": {
      "op": "PUSH2",
      "value": "0xD85"
    },
    "3660": {
      "jump": "i",
      "op": "JUMP"
    },
    "3661": {
      "op": "JUMPDEST"
    },
    "3662": {
      "op": "DUP1"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3665": {
      "op": "NOT"
    },
    "3666": {
      "op": "DIV"
    },
    "3667": {
      "op": "DUP3"
    },
    "3668": {
      "op": "GT"
    },
    "3669": {
      "op": "ISZERO"
    },
    "3670": {
      "op": "PUSH2",
      "value": "0xE61"
    },
    "3673": {
      "op": "JUMPI"
    },
    "3674": {
      "op": "PUSH2",
      "value": "0xE61"
    },
    "3677": {
      "op": "PUSH2",
      "value": "0xD0B"
    },
    "3680": {
      "jump": "i",
      "op": "JUMP"
    },
    "3681": {
      "op": "JUMPDEST"
    },
    "3682": {
      "op": "MUL"
    },
    "3683": {
      "op": "SWAP4"
    },
    "3684": {
      "op": "SWAP3"
    },
    "3685": {
      "op": "POP"
    },
    "3686": {
      "op": "POP"
    },
    "3687": {
      "op": "POP"
    },
    "3688": {
      "jump": "o",
      "op": "JUMP"
    },
    "3689": {
      "op": "JUMPDEST"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3692": {
      "op": "PUSH2",
      "value": "0xC9F"
    },
    "3695": {
      "op": "DUP4"
    },
    "3696": {
      "op": "DUP4"
    },
    "3697": {
      "op": "PUSH2",
      "value": "0xDC8"
    },
    "3700": {
      "jump": "i",
      "op": "JUMP"
    },
    "3701": {
      "op": "JUMPDEST"
    },
    "3702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3704": {
      "op": "DUP2"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3707": {
      "op": "NOT"
    },
    "3708": {
      "op": "DIV"
    },
    "3709": {
      "op": "DUP4"
    },
    "3710": {
      "op": "GT"
    },
    "3711": {
      "op": "DUP3"
    },
    "3712": {
      "op": "ISZERO"
    },
    "3713": {
      "op": "ISZERO"
    },
    "3714": {
      "op": "AND"
    },
    "3715": {
      "op": "ISZERO"
    },
    "3716": {
      "op": "PUSH2",
      "value": "0xE8F"
    },
    "3719": {
      "op": "JUMPI"
    },
    "3720": {
      "op": "PUSH2",
      "value": "0xE8F"
    },
    "3723": {
      "op": "PUSH2",
      "value": "0xD0B"
    },
    "3726": {
      "jump": "i",
      "op": "JUMP"
    },
    "3727": {
      "op": "JUMPDEST"
    },
    "3728": {
      "op": "POP"
    },
    "3729": {
      "op": "MUL"
    },
    "3730": {
      "op": "SWAP1"
    },
    "3731": {
      "jump": "o",
      "op": "JUMP"
    },
    "3732": {
      "op": "JUMPDEST"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3735": {
      "op": "DUP3"
    },
    "3736": {
      "op": "PUSH2",
      "value": "0xEB1"
    },
    "3739": {
      "op": "JUMPI"
    },
    "3740": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3747": {
      "op": "SHL"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3750": {
      "op": "MSTORE"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3755": {
      "op": "MSTORE"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3760": {
      "op": "REVERT"
    },
    "3761": {
      "op": "JUMPDEST"
    },
    "3762": {
      "op": "POP"
    },
    "3763": {
      "op": "DIV"
    },
    "3764": {
      "op": "SWAP1"
    },
    "3765": {
      "jump": "o",
      "op": "JUMP"
    },
    "3766": {
      "op": "JUMPDEST"
    },
    "3767": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3774": {
      "op": "SHL"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3777": {
      "op": "MSTORE"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3780": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3782": {
      "op": "MSTORE"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3787": {
      "op": "REVERT"
    },
    "3788": {
      "op": "JUMPDEST"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3793": {
      "op": "NOT"
    },
    "3794": {
      "op": "DUP3"
    },
    "3795": {
      "op": "EQ"
    },
    "3796": {
      "op": "ISZERO"
    },
    "3797": {
      "op": "PUSH2",
      "value": "0xEE0"
    },
    "3800": {
      "op": "JUMPI"
    },
    "3801": {
      "op": "PUSH2",
      "value": "0xEE0"
    },
    "3804": {
      "op": "PUSH2",
      "value": "0xD0B"
    },
    "3807": {
      "jump": "i",
      "op": "JUMP"
    },
    "3808": {
      "op": "JUMPDEST"
    },
    "3809": {
      "op": "POP"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3812": {
      "op": "ADD"
    },
    "3813": {
      "op": "SWAP1"
    },
    "3814": {
      "jump": "o",
      "op": "JUMP"
    },
    "3815": {
      "op": "JUMPDEST"
    },
    "3816": {
      "op": "DUP1"
    },
    "3817": {
      "op": "MLOAD"
    },
    "3818": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "3829": {
      "op": "DUP2"
    },
    "3830": {
      "op": "AND"
    },
    "3831": {
      "op": "DUP2"
    },
    "3832": {
      "op": "EQ"
    },
    "3833": {
      "op": "PUSH2",
      "value": "0xC53"
    },
    "3836": {
      "op": "JUMPI"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3839": {
      "op": "DUP1"
    },
    "3840": {
      "op": "REVERT"
    },
    "3841": {
      "op": "JUMPDEST"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3844": {
      "op": "DUP1"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3847": {
      "op": "DUP1"
    },
    "3848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3852": {
      "op": "DUP7"
    },
    "3853": {
      "op": "DUP9"
    },
    "3854": {
      "op": "SUB"
    },
    "3855": {
      "op": "SLT"
    },
    "3856": {
      "op": "ISZERO"
    },
    "3857": {
      "op": "PUSH2",
      "value": "0xF19"
    },
    "3860": {
      "op": "JUMPI"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3863": {
      "op": "DUP1"
    },
    "3864": {
      "op": "REVERT"
    },
    "3865": {
      "op": "JUMPDEST"
    },
    "3866": {
      "op": "PUSH2",
      "value": "0xF22"
    },
    "3869": {
      "op": "DUP7"
    },
    "3870": {
      "op": "PUSH2",
      "value": "0xEE7"
    },
    "3873": {
      "jump": "i",
      "op": "JUMP"
    },
    "3874": {
      "op": "JUMPDEST"
    },
    "3875": {
      "op": "SWAP5"
    },
    "3876": {
      "op": "POP"
    },
    "3877": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3879": {
      "op": "DUP7"
    },
    "3880": {
      "op": "ADD"
    },
    "3881": {
      "op": "MLOAD"
    },
    "3882": {
      "op": "SWAP4"
    },
    "3883": {
      "op": "POP"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3886": {
      "op": "DUP7"
    },
    "3887": {
      "op": "ADD"
    },
    "3888": {
      "op": "MLOAD"
    },
    "3889": {
      "op": "SWAP3"
    },
    "3890": {
      "op": "POP"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3893": {
      "op": "DUP7"
    },
    "3894": {
      "op": "ADD"
    },
    "3895": {
      "op": "MLOAD"
    },
    "3896": {
      "op": "SWAP2"
    },
    "3897": {
      "op": "POP"
    },
    "3898": {
      "op": "PUSH2",
      "value": "0xF45"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3903": {
      "op": "DUP8"
    },
    "3904": {
      "op": "ADD"
    },
    "3905": {
      "op": "PUSH2",
      "value": "0xEE7"
    },
    "3908": {
      "jump": "i",
      "op": "JUMP"
    },
    "3909": {
      "op": "JUMPDEST"
    },
    "3910": {
      "op": "SWAP1"
    },
    "3911": {
      "op": "POP"
    },
    "3912": {
      "op": "SWAP3"
    },
    "3913": {
      "op": "SWAP6"
    },
    "3914": {
      "op": "POP"
    },
    "3915": {
      "op": "SWAP3"
    },
    "3916": {
      "op": "SWAP6"
    },
    "3917": {
      "op": "SWAP1"
    },
    "3918": {
      "op": "SWAP4"
    },
    "3919": {
      "op": "POP"
    },
    "3920": {
      "jump": "o",
      "op": "JUMP"
    },
    "3921": {
      "op": "JUMPDEST"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3926": {
      "op": "DUP3"
    },
    "3927": {
      "op": "DUP5"
    },
    "3928": {
      "op": "SUB"
    },
    "3929": {
      "op": "SLT"
    },
    "3930": {
      "op": "ISZERO"
    },
    "3931": {
      "op": "PUSH2",
      "value": "0xF63"
    },
    "3934": {
      "op": "JUMPI"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3937": {
      "op": "DUP1"
    },
    "3938": {
      "op": "REVERT"
    },
    "3939": {
      "op": "JUMPDEST"
    },
    "3940": {
      "op": "DUP2"
    },
    "3941": {
      "op": "MLOAD"
    },
    "3942": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3944": {
      "op": "DUP2"
    },
    "3945": {
      "op": "AND"
    },
    "3946": {
      "op": "DUP2"
    },
    "3947": {
      "op": "EQ"
    },
    "3948": {
      "op": "PUSH2",
      "value": "0xC9F"
    },
    "3951": {
      "op": "JUMPI"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3954": {
      "op": "DUP1"
    },
    "3955": {
      "op": "REVERT"
    }
  },
  "sha1": "260a34bc75b77eab5e32d621718a1ee311583236",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\n/**\n * @title Token Farm Contract\n * @author DJ Evan\n * @notice Controls logic for the defi\n * @dev available functions: stakeTokens, unStakeTokens, issueTokens, addAllowedTokens, getValue\n */\ncontract TokenFarm is Ownable {\n    mapping(address => mapping(address => uint256)) public stakingBalance;\n    mapping(address => uint256) public uniqueTokenStaked;\n    mapping(address => address) public tokenPriceFeedMapping;\n\n    address[] public stakers;\n    address[] public allowedTokens;\n\n    IERC20 public crewmateToken;\n\n    constructor(address _crewmateTokenAddress) {\n        crewmateToken = IERC20(_crewmateTokenAddress);\n    }\n\n    /**\n     * @notice set price feed for this contract\n     * @dev only owner may call this function\n     */\n    function setPriceFeedContract(address _token, address _priceFeed)\n        public\n        onlyOwner\n    {\n        tokenPriceFeedMapping[_token] = _priceFeed;\n    }\n\n    /**\n     * @notice send stakers token reward based on TVL\n     * @dev only owner may call this function\n     */\n    function issueTokens() public onlyOwner {\n        for (uint256 i = 0; i < stakers.length; i++) {\n            address recipient = stakers[i];\n            uint256 userTotalValue = getUserTotalValue(recipient);\n            crewmateToken.transfer(recipient, userTotalValue);\n        }\n    }\n\n    /**\n     * @notice get all user's value locked\n     * @param _user selected user address\n     * @return uint256 user's TVL\n     */\n    function getUserTotalValue(address _user) public view returns (uint256) {\n        require(uniqueTokenStaked[_user] > 0, \"No token staked\");\n\n        uint256 totalValue = 0;\n        for (uint256 i = 0; i < allowedTokens.length; i++) {\n            totalValue =\n                totalValue +\n                getSingleTokenValue(_user, allowedTokens[i]);\n        }\n\n        return totalValue;\n    }\n\n    /**\n     * @notice get value of each user's token\n     * @dev converts token value to USD\n     * @dev token's price * user's staking balance\n     * @param _user selected user address\n     * @param _token token address\n     * @return uint256 the converted token amount\n     */\n    function getSingleTokenValue(address _user, address _token)\n        public\n        view\n        returns (uint256)\n    {\n        if (uniqueTokenStaked[_user] <= 0) return 0;\n\n        (uint256 price, uint256 decimals) = getTokenValue(_token);\n\n        return ((stakingBalance[_token][_user] * price) / (10**decimals));\n    }\n\n    /**\n     * @notice get token price\n     * @dev gather price feed from chainlink\n     * @param _token token address\n     * @return uint256 price feed, decimals\n     */\n    function getTokenValue(address _token)\n        public\n        view\n        returns (uint256, uint256)\n    {\n        address priceFeedAddress = tokenPriceFeedMapping[_token];\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\n            priceFeedAddress\n        );\n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        uint256 decimals = uint256(priceFeed.decimals());\n\n        return (uint256(price), decimals);\n    }\n\n    /**\n     * @notice stake token to the contract\n     * @dev only for certain tokens\n     * @param _amount how much token wanted to be staked\n     * @param _token token address\n     */\n    function stakeTokens(uint256 _amount, address _token) public {\n        require(_amount > 0, \"Amount must be more than 0\");\n        require(\n            tokenIsAllowed(_token),\n            \"This token currently maynot be staked\"\n        );\n        IERC20(_token).transferFrom(msg.sender, address(this), _amount);\n\n        updateUniqueTokenStaked(msg.sender, _token);\n        stakingBalance[_token][msg.sender] =\n            stakingBalance[_token][msg.sender] +\n            _amount;\n\n        if (uniqueTokenStaked[msg.sender] == 1) {\n            stakers.push(msg.sender);\n        }\n    }\n\n    /**\n     * @notice transfer the staked balance back to the owner\n     * @param _token token address\n     */\n    function unstakeTokens(address _token) public {\n        uint256 balance = stakingBalance[_token][msg.sender];\n\n        require(balance > 0, \"Staking balance cannot be zero\");\n\n        IERC20(_token).transfer(msg.sender, balance);\n        stakingBalance[_token][msg.sender] = 0;\n        uniqueTokenStaked[msg.sender] = uniqueTokenStaked[msg.sender] - 1;\n    }\n\n    /**\n     * @notice tracks each user staked tokens\n     * @param _user selected user address\n     * @param _token token address\n     */\n    function updateUniqueTokenStaked(address _user, address _token) internal {\n        if (stakingBalance[_token][_user] <= 0) {\n            uniqueTokenStaked[_user] = uniqueTokenStaked[_user] + 1;\n        }\n    }\n\n    /**\n     * @notice allow token to be staked\n     * @param _token token address\n     * @dev only owner may call this function\n     */\n    function addAllowedTokens(address _token) public onlyOwner {\n        allowedTokens.push(_token);\n    }\n\n    /**\n     * @notice check is token allowed to stake\n     * @param _token token address\n     * @return boolean\n     */\n    function tokenIsAllowed(address _token) public view returns (bool) {\n        for (uint256 i = 0; i < allowedTokens.length; i++) {\n            if (allowedTokens[i] == _token) return true;\n        }\n\n        return false;\n    }\n}\n",
  "sourceMap": "439:5098:4:-:0;;;772:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;665:10:2;867:9:0;:23::i;:::-;825:13:4;:45;;-1:-1:-1;;;;;;825:45:4;-1:-1:-1;;;;;825:45:4;;;;;;;;;;439:5098;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:290:5:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;:::-;439:5098:4;;;;;;",
  "sourcePath": "contracts/TokenFarm.sol",
  "type": "contract"
}